{
  "version": 3,
  "sources": ["../../src/uleb.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n// Helper utility: write number as an ULEB array.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nexport function ulebEncode(num: number): number[] {\n    const arr = [];\n    let len = 0;\n\n    if (num === 0) {\n        return [0];\n    }\n\n    while (num > 0) {\n        arr[len] = num & 0x7f;\n        if ((num >>= 7)) {\n            arr[len] |= 0x80;\n        }\n        len += 1;\n    }\n\n    return arr;\n}\n\n// Helper utility: decode ULEB as an array of numbers.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nexport function ulebDecode(arr: number[] | Uint8Array): {\n    value: number;\n    length: number;\n} {\n    let total = 0;\n    let shift = 0;\n    let len = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const byte = arr[len];\n        len += 1;\n        total |= (byte & 0x7f) << shift;\n        if ((byte & 0x80) === 0) {\n            break;\n        }\n        shift += 7;\n    }\n\n    return {\n        value: total,\n        length: len,\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMO,SAAS,WAAW,KAAuB;AAC9C,QAAM,MAAM,CAAC;AACb,MAAI,MAAM;AAEV,MAAI,QAAQ,GAAG;AACX,WAAO,CAAC,CAAC;AAAA,EACb;AAEA,SAAO,MAAM,GAAG;AACZ,QAAI,GAAG,IAAI,MAAM;AACjB,QAAK,QAAQ,GAAI;AACb,UAAI,GAAG,KAAK;AAAA,IAChB;AACA,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAIO,SAAS,WAAW,KAGzB;AACE,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,MAAM;AAGV,SAAO,MAAM;AACT,UAAM,OAAO,IAAI,GAAG;AACpB,WAAO;AACP,cAAU,OAAO,QAAS;AAC1B,SAAK,OAAO,SAAU,GAAG;AACrB;AAAA,IACJ;AACA,aAAS;AAAA,EACb;AAEA,SAAO;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AACJ;",
  "names": []
}
