{
  "version": 3,
  "sources": ["../../../src/themes/themeContract.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createGlobalThemeContract } from '@vanilla-extract/css';\n\nconst themeContractValues = {\n    blurs: {\n        modalOverlay: '',\n    },\n    backgroundColors: {\n        primaryButton: '',\n        primaryButtonHover: '',\n        outlineButtonHover: '',\n        walletItemHover: '',\n        walletItemSelected: '',\n        modalOverlay: '',\n        modalPrimary: '',\n        modalSecondary: '',\n        iconButton: '',\n        dropdownMenu: '',\n        dropdownMenuSeparator: '',\n        scrollThumb: '',\n    },\n    borderColors: {\n        outlineButton: '',\n    },\n    colors: {\n        primaryButton: '',\n        outlineButtonHover: '',\n        body: '',\n        bodyMuted: '',\n        bodyDanger: '',\n        iconButton: '',\n    },\n    radii: {\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n        full: '',\n    },\n    fontWeights: {\n        normal: '',\n        medium: '',\n        bold: '',\n    },\n    fontSizes: {\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n    },\n    typography: {\n        fontFamily: '',\n        fontStyle: '',\n        lineHeight: '',\n        letterSpacing: '',\n    },\n    spacing: {\n        xxsmall: '',\n        xsmall: '',\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n    },\n};\n\nexport type ThemeVars = typeof themeContractValues;\n\n/**\n * A custom theme that is enabled when various conditions are\n */\nexport type DynamicTheme = {\n    /**\n     * An optional media query required for the given theme to be enabled. This is useful\n     * when you want the theme of your application to automatically switch depending on\n     * a media feature.\n     *\n     * @example '(prefers-color-scheme: dark)'\n     */\n    mediaQuery?: string;\n\n    /**\n     * An optional CSS selector required for the given theme to be enabled. This is useful\n     * when you have a manual theme switcher on your application that sets a top-level\n     * class name or data-attribute to control the current theme.\n     *\n     * @example '.data-dark'\n     */\n    selector?: string;\n\n    /** The theme definitions that will be set when the selector and mediaQuery criteria are matched. */\n    variables: ThemeVars;\n};\n\nexport type Theme = ThemeVars | DynamicTheme[];\n\nexport const themeVars = createGlobalThemeContract(\n    themeContractValues,\n    (_, path) => `dapp-kit-${path.join('-')}`,\n);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,iBAA0C;AAE1C,IAAM,sBAAsB;AAAA,EACxB,OAAO;AAAA,IACH,cAAc;AAAA,EAClB;AAAA,EACA,kBAAkB;AAAA,IACd,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,uBAAuB;AAAA,IACvB,aAAa;AAAA,EACjB;AAAA,EACA,cAAc;AAAA,IACV,eAAe;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,IACJ,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,EAChB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA,aAAa;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA,WAAW;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACR,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,eAAe;AAAA,EACnB;AAAA,EACA,SAAS;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AACJ;AAgCO,IAAM,gBAAY;AAAA,EACrB;AAAA,EACA,CAAC,GAAG,SAAS,YAAY,KAAK,KAAK,GAAG,CAAC;AAC3C;",
  "names": []
}
