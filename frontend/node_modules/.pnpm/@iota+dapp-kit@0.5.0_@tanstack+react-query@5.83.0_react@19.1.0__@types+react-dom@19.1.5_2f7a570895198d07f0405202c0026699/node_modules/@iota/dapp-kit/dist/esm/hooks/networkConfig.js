// src/hooks/useIotaClient.ts
import { useContext } from "react";

// src/components/IotaClientProvider.tsx
import { getNetwork, isIotaClient, Network, IotaClient } from "@iota/iota-sdk/client";
import { createContext, useMemo, useState } from "react";
import { jsx } from "react/jsx-runtime";
var IotaClientContext = createContext(null);
var DEFAULT_NETWORKS = {
  localnet: { url: getNetwork(Network.Localnet)?.url }
};

// src/hooks/useIotaClient.ts
function useIotaClientContext() {
  const iotaClient = useContext(IotaClientContext);
  if (!iotaClient) {
    throw new Error(
      "Could not find IotaClientContext. Ensure that you have set up the IotaClientProvider"
    );
  }
  return iotaClient;
}

// src/hooks/networkConfig.ts
function createNetworkConfig(networkConfig) {
  function useNetworkConfig() {
    const { config } = useIotaClientContext();
    if (!config) {
      throw new Error("No network config found");
    }
    return config;
  }
  function useNetworkVariables() {
    const { variables } = useNetworkConfig();
    return variables ?? {};
  }
  function useNetworkVariable(name) {
    const variables = useNetworkVariables();
    return variables[name];
  }
  return {
    networkConfig,
    useNetworkConfig,
    useNetworkVariables,
    useNetworkVariable
  };
}
export {
  createNetworkConfig
};
//# sourceMappingURL=networkConfig.js.map
