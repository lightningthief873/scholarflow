{
  "version": 3,
  "sources": ["../../../../src/hooks/wallet/useWalletsChanged.ts", "../../../../src/utils/walletUtils.ts", "../../../../src/hooks/wallet/useWalletStore.ts", "../../../../src/contexts/walletContext.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletWithRequiredFeatures } from '@iota/wallet-standard';\nimport { getWallets } from '@iota/wallet-standard';\nimport { useEffect } from 'react';\n\nimport { getRegisteredWallets } from '../../utils/walletUtils.js';\nimport { useWalletStore } from './useWalletStore.js';\n\n/**\n * Internal hook for easily handling the addition and removal of new wallets.\n */\nexport function useWalletsChanged(\n    preferredWallets: string[],\n    walletFilter?: (wallet: WalletWithRequiredFeatures) => boolean,\n) {\n    const setWalletRegistered = useWalletStore((state) => state.setWalletRegistered);\n    const setWalletUnregistered = useWalletStore((state) => state.setWalletUnregistered);\n\n    useEffect(() => {\n        const walletsApi = getWallets();\n        setWalletRegistered(getRegisteredWallets(preferredWallets, walletFilter));\n\n        const unsubscribeFromRegister = walletsApi.on('register', () => {\n            setWalletRegistered(getRegisteredWallets(preferredWallets, walletFilter));\n        });\n\n        const unsubscribeFromUnregister = walletsApi.on('unregister', (unregisteredWallet) => {\n            setWalletUnregistered(\n                getRegisteredWallets(preferredWallets, walletFilter),\n                unregisteredWallet,\n            );\n        });\n\n        return () => {\n            unsubscribeFromRegister();\n            unsubscribeFromUnregister();\n        };\n    }, [preferredWallets, walletFilter, setWalletRegistered, setWalletUnregistered]);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type {\n    MinimallyRequiredFeatures,\n    Wallet,\n    WalletWithFeatures,\n    WalletWithRequiredFeatures,\n} from '@iota/wallet-standard';\nimport { getWallets, isWalletWithRequiredFeatureSet } from '@iota/wallet-standard';\n\nexport function getRegisteredWallets<AdditionalFeatures extends Wallet['features']>(\n    preferredWallets: string[],\n    walletFilter?: (wallet: WalletWithRequiredFeatures) => boolean,\n) {\n    const walletsApi = getWallets();\n    const wallets = walletsApi.get();\n\n    const iotaWallets = wallets.filter(\n        (wallet): wallet is WalletWithFeatures<MinimallyRequiredFeatures & AdditionalFeatures> =>\n            isWalletWithRequiredFeatureSet(wallet) && (!walletFilter || walletFilter(wallet)),\n    );\n\n    return [\n        // Preferred wallets, in order:\n        ...(preferredWallets\n            .map((name) => iotaWallets.find((wallet) => wallet.name === name))\n            .filter(Boolean) as WalletWithFeatures<\n            MinimallyRequiredFeatures & AdditionalFeatures\n        >[]),\n\n        // Wallets in default order:\n        ...iotaWallets.filter((wallet) => !preferredWallets.includes(wallet.name)),\n    ];\n}\n\nexport function getWalletUniqueIdentifier(wallet?: Wallet) {\n    return wallet?.id ?? wallet?.name;\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useContext } from 'react';\nimport { useStore } from 'zustand';\n\nimport { WalletContext } from '../../contexts/walletContext.js';\nimport type { StoreState } from '../../walletStore.js';\n\nexport function useWalletStore<T>(selector: (state: StoreState) => T): T {\n    const store = useContext(WalletContext);\n    if (!store) {\n        throw new Error(\n            'Could not find WalletContext. Ensure that you have set up the WalletProvider.',\n        );\n    }\n    return useStore(store, selector);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createContext } from 'react';\n\nimport type { WalletStore } from '../walletStore.js';\n\nexport const WalletContext = createContext<WalletStore | null>(null);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,IAAAA,0BAA2B;AAC3B,IAAAC,gBAA0B;;;ACI1B,6BAA2D;AAEpD,SAAS,qBACZ,kBACA,cACF;AACE,QAAM,iBAAa,mCAAW;AAC9B,QAAM,UAAU,WAAW,IAAI;AAE/B,QAAM,cAAc,QAAQ;AAAA,IACxB,CAAC,eACG,uDAA+B,MAAM,MAAM,CAAC,gBAAgB,aAAa,MAAM;AAAA,EACvF;AAEA,SAAO;AAAA;AAAA,IAEH,GAAI,iBACC,IAAI,CAAC,SAAS,YAAY,KAAK,CAAC,WAAW,OAAO,SAAS,IAAI,CAAC,EAChE,OAAO,OAAO;AAAA;AAAA,IAKnB,GAAG,YAAY,OAAO,CAAC,WAAW,CAAC,iBAAiB,SAAS,OAAO,IAAI,CAAC;AAAA,EAC7E;AACJ;;;AC/BA,IAAAC,gBAA2B;AAC3B,qBAAyB;;;ACDzB,mBAA8B;AAIvB,IAAM,oBAAgB,4BAAkC,IAAI;;;ADE5D,SAAS,eAAkB,UAAuC;AACrE,QAAM,YAAQ,0BAAW,aAAa;AACtC,MAAI,CAAC,OAAO;AACR,UAAM,IAAI;AAAA,MACN;AAAA,IACJ;AAAA,EACJ;AACA,aAAO,yBAAS,OAAO,QAAQ;AACnC;;;AFJO,SAAS,kBACZ,kBACA,cACF;AACE,QAAM,sBAAsB,eAAe,CAAC,UAAU,MAAM,mBAAmB;AAC/E,QAAM,wBAAwB,eAAe,CAAC,UAAU,MAAM,qBAAqB;AAEnF,+BAAU,MAAM;AACZ,UAAM,iBAAa,oCAAW;AAC9B,wBAAoB,qBAAqB,kBAAkB,YAAY,CAAC;AAExE,UAAM,0BAA0B,WAAW,GAAG,YAAY,MAAM;AAC5D,0BAAoB,qBAAqB,kBAAkB,YAAY,CAAC;AAAA,IAC5E,CAAC;AAED,UAAM,4BAA4B,WAAW,GAAG,cAAc,CAAC,uBAAuB;AAClF;AAAA,QACI,qBAAqB,kBAAkB,YAAY;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,WAAO,MAAM;AACT,8BAAwB;AACxB,gCAA0B;AAAA,IAC9B;AAAA,EACJ,GAAG,CAAC,kBAAkB,cAAc,qBAAqB,qBAAqB,CAAC;AACnF;",
  "names": ["import_wallet_standard", "import_react", "import_react"]
}
