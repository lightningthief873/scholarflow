{
  "version": 3,
  "sources": ["../../../src/graphql/types.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nexport type MoveData =\n    | { Address: string }\n    | { UID: string }\n    | { ID: string }\n    | { Bool: boolean }\n    | { Number: string }\n    | { String: string }\n    | { Vector: [MoveData] }\n    | { Option: MoveData | null }\n    | { Struct: [{ name: string; value: MoveData }] };\n\nexport type MoveTypeLayout =\n    | 'address'\n    | 'bool'\n    | 'u8'\n    | 'u16'\n    | 'u32'\n    | 'u64'\n    | 'u128'\n    | 'u256'\n    | { vector: MoveTypeLayout }\n    | {\n          struct: {\n              type: string;\n              fields: [{ name: string; layout: MoveTypeLayout }];\n          };\n      };\n\nexport type MoveTypeSignature =\n    | 'address'\n    | 'bool'\n    | 'u8'\n    | 'u16'\n    | 'u32'\n    | 'u64'\n    | 'u128'\n    | 'u256'\n    | { vector: MoveTypeSignature }\n    | {\n          datatype: {\n              package: string;\n              module: string;\n              type: string;\n              typeParameters: [MoveTypeSignature];\n          };\n      };\n\nexport type OpenMoveTypeSignature = {\n    ref?: ('&' | '&mut') | null;\n    body: OpenMoveTypeSignatureBody;\n};\n\nexport type OpenMoveTypeSignatureBody =\n    | 'address'\n    | 'bool'\n    | 'u8'\n    | 'u16'\n    | 'u32'\n    | 'u64'\n    | 'u128'\n    | 'u256'\n    | { vector: OpenMoveTypeSignatureBody }\n    | {\n          datatype: {\n              package: string;\n              module: string;\n              type: string;\n              typeParameters: [OpenMoveTypeSignatureBody];\n          };\n      }\n    | { typeParameter: number };\n\nexport interface CustomScalars {\n    BigInt: string;\n    Base64: string;\n    DateTime: string;\n    JSON: unknown;\n    MoveData: MoveData;\n    MoveTypeLayout: MoveTypeLayout;\n    MoveTypeSignature: MoveTypeSignature;\n    OpenMoveTypeSignature: OpenMoveTypeSignature;\n    IotaAddress: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
