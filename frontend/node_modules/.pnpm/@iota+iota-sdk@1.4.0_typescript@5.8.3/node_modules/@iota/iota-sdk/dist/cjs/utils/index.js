"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var utils_exports = {};
__export(utils_exports, {
  IOTA_ADDRESS_LENGTH: () => import_iota_types.IOTA_ADDRESS_LENGTH,
  IOTA_CLOCK_OBJECT_ID: () => import_constants.IOTA_CLOCK_OBJECT_ID,
  IOTA_DECIMALS: () => import_constants.IOTA_DECIMALS,
  IOTA_FRAMEWORK_ADDRESS: () => import_constants.IOTA_FRAMEWORK_ADDRESS,
  IOTA_SYSTEM_ADDRESS: () => import_constants.IOTA_SYSTEM_ADDRESS,
  IOTA_SYSTEM_MODULE_NAME: () => import_constants.IOTA_SYSTEM_MODULE_NAME,
  IOTA_SYSTEM_STATE_OBJECT_ID: () => import_constants.IOTA_SYSTEM_STATE_OBJECT_ID,
  IOTA_TYPE_ARG: () => import_constants.IOTA_TYPE_ARG,
  MOVE_STDLIB_ADDRESS: () => import_constants.MOVE_STDLIB_ADDRESS,
  NANOS_PER_IOTA: () => import_constants.NANOS_PER_IOTA,
  formatAddress: () => import_format.formatAddress,
  formatDigest: () => import_format.formatDigest,
  formatType: () => import_format.formatType,
  fromB64: () => import_bcs.fromB64,
  fromHEX: () => import_bcs.fromHEX,
  isValidIotaAddress: () => import_iota_types.isValidIotaAddress,
  isValidIotaObjectId: () => import_iota_types.isValidIotaObjectId,
  isValidTransactionDigest: () => import_iota_types.isValidTransactionDigest,
  normalizeIotaAddress: () => import_iota_types.normalizeIotaAddress,
  normalizeIotaObjectId: () => import_iota_types.normalizeIotaObjectId,
  normalizeStructTag: () => import_iota_types.normalizeStructTag,
  parseStructTag: () => import_iota_types.parseStructTag,
  toB64: () => import_bcs.toB64,
  toHEX: () => import_bcs.toHEX,
  trimAddress: () => import_format.trimAddress,
  trimOrFormatAddress: () => import_format.trimOrFormatAddress
});
module.exports = __toCommonJS(utils_exports);
var import_format = require("./format.js");
var import_iota_types = require("./iota-types.js");
var import_bcs = require("@iota/bcs");
var import_constants = require("./constants.js");
//# sourceMappingURL=index.js.map
