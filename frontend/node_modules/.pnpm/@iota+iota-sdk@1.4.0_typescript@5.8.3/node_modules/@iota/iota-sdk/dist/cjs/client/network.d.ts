export declare enum Network {
    Mainnet = "mainnet",
    Devnet = "devnet",
    Testnet = "testnet",
    Localnet = "localnet",
    Custom = "custom"
}
export type NetworkId = Network | string;
export type ChainType = `${string}:${string}`;
export interface NetworkConfiguration<Metadata = undefined> {
    id: Network;
    name: string;
    url: string;
    explorer: string;
    chain: ChainType;
    faucet?: string;
    kiosk?: KioskConfiguration;
    graphql?: string;
    metadata?: Metadata;
}
export interface KioskConfiguration {
    royaltyRulePackageId: string;
    kioskLockRulePackageId: string;
    floorPriceRulePackageId: string;
    personalKioskRulePackageId: string;
}
type NetworksConfiguration = Record<NetworkId, NetworkConfiguration>;
export declare function getAllNetworks(): NetworksConfiguration;
export declare function getNetwork<T>(network: NetworkId): NetworkConfiguration<T>;
export declare function getDefaultNetwork(): Network;
export declare function getFullnodeUrl(network: NetworkId): string;
export declare function getGraphQLUrl(network: NetworkId): string | undefined;
export {};
