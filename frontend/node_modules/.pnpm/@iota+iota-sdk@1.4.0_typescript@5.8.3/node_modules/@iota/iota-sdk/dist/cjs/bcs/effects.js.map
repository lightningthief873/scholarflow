{
  "version": 3,
  "sources": ["../../../src/bcs/effects.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@iota/bcs';\n\nimport { Address, ObjectDigest, Owner } from './bcs.js';\n\nconst PackageUpgradeError = bcs.enum('PackageUpgradeError', {\n    UnableToFetchPackage: bcs.struct('UnableToFetchPackage', { packageId: Address }),\n    NotAPackage: bcs.struct('NotAPackage', { objectId: Address }),\n    IncompatibleUpgrade: null,\n    DigestDoesNotMatch: bcs.struct('DigestDoesNotMatch', { digest: bcs.vector(bcs.u8()) }),\n    UnknownUpgradePolicy: bcs.struct('UnknownUpgradePolicy', { policy: bcs.u8() }),\n    PackageIDDoesNotMatch: bcs.struct('PackageIDDoesNotMatch', {\n        packageId: Address,\n        ticketId: Address,\n    }),\n});\n\nconst ModuleId = bcs.struct('ModuleId', {\n    address: Address,\n    name: bcs.string(),\n});\nconst MoveLocation = bcs.struct('MoveLocation', {\n    module: ModuleId,\n    function: bcs.u16(),\n    instruction: bcs.u16(),\n    functionName: bcs.option(bcs.string()),\n});\n\nconst CommandArgumentError = bcs.enum('CommandArgumentError', {\n    TypeMismatch: null,\n    InvalidBCSBytes: null,\n    InvalidUsageOfPureArg: null,\n    InvalidArgumentToPrivateEntryFunction: null,\n    IndexOutOfBounds: bcs.struct('IndexOutOfBounds', { idx: bcs.u16() }),\n    SecondaryIndexOutOfBounds: bcs.struct('SecondaryIndexOutOfBounds', {\n        resultIdx: bcs.u16(),\n        secondaryIdx: bcs.u16(),\n    }),\n    InvalidResultArity: bcs.struct('InvalidResultArity', { resultIdx: bcs.u16() }),\n    InvalidGasCoinUsage: null,\n    InvalidValueUsage: null,\n    InvalidObjectByValue: null,\n    InvalidObjectByMutRef: null,\n    SharedObjectOperationNotAllowed: null,\n});\n\nconst TypeArgumentError = bcs.enum('TypeArgumentError', {\n    TypeNotFound: null,\n    ConstraintNotSatisfied: null,\n});\n\nconst ExecutionFailureStatus = bcs.enum('ExecutionFailureStatus', {\n    InsufficientGas: null,\n    InvalidGasObject: null,\n    InvariantViolation: null,\n    FeatureNotYetSupported: null,\n    MoveObjectTooBig: bcs.struct('MoveObjectTooBig', {\n        objectSize: bcs.u64(),\n        maxObjectSize: bcs.u64(),\n    }),\n    MovePackageTooBig: bcs.struct('MovePackageTooBig', {\n        objectSize: bcs.u64(),\n        maxObjectSize: bcs.u64(),\n    }),\n    CircularObjectOwnership: bcs.struct('CircularObjectOwnership', { object: Address }),\n    InsufficientCoinBalance: null,\n    CoinBalanceOverflow: null,\n    PublishErrorNonZeroAddress: null,\n    IotaMoveVerificationError: null,\n    MovePrimitiveRuntimeError: bcs.option(MoveLocation),\n    MoveAbort: bcs.tuple([MoveLocation, bcs.u64()]),\n    VMVerificationOrDeserializationError: null,\n    VMInvariantViolation: null,\n    FunctionNotFound: null,\n    ArityMismatch: null,\n    TypeArityMismatch: null,\n    NonEntryFunctionInvoked: null,\n    CommandArgumentError: bcs.struct('CommandArgumentError', {\n        argIdx: bcs.u16(),\n        kind: CommandArgumentError,\n    }),\n    TypeArgumentError: bcs.struct('TypeArgumentError', {\n        argumentIdx: bcs.u16(),\n        kind: TypeArgumentError,\n    }),\n    UnusedValueWithoutDrop: bcs.struct('UnusedValueWithoutDrop', {\n        resultIdx: bcs.u16(),\n        secondaryIdx: bcs.u16(),\n    }),\n    InvalidPublicFunctionReturnType: bcs.struct('InvalidPublicFunctionReturnType', {\n        idx: bcs.u16(),\n    }),\n    InvalidTransferObject: null,\n    EffectsTooLarge: bcs.struct('EffectsTooLarge', { currentSize: bcs.u64(), maxSize: bcs.u64() }),\n    PublishUpgradeMissingDependency: null,\n    PublishUpgradeDependencyDowngrade: null,\n    PackageUpgradeError: bcs.struct('PackageUpgradeError', { upgradeError: PackageUpgradeError }),\n    WrittenObjectsTooLarge: bcs.struct('WrittenObjectsTooLarge', {\n        currentSize: bcs.u64(),\n        maxSize: bcs.u64(),\n    }),\n    CertificateDenied: null,\n    IotaMoveVerificationTimedout: null,\n    SharedObjectOperationNotAllowed: null,\n    InputObjectDeleted: null,\n});\n\nconst ExecutionStatus = bcs.enum('ExecutionStatus', {\n    Success: null,\n    Failed: bcs.struct('ExecutionFailed', {\n        error: ExecutionFailureStatus,\n        command: bcs.option(bcs.u64()),\n    }),\n});\n\nconst GasCostSummary = bcs.struct('GasCostSummary', {\n    computationCost: bcs.u64(),\n    computationCostBurned: bcs.u64(),\n    storageCost: bcs.u64(),\n    storageRebate: bcs.u64(),\n    nonRefundableStorageFee: bcs.u64(),\n});\n\nconst VersionDigest = bcs.tuple([bcs.u64(), ObjectDigest]);\n\nconst ObjectIn = bcs.enum('ObjectIn', {\n    NotExist: null,\n    Exist: bcs.tuple([VersionDigest, Owner]),\n});\n\nexport const ObjectOut = bcs.enum('ObjectOut', {\n    NotExist: null,\n    ObjectWrite: bcs.tuple([ObjectDigest, Owner]),\n    PackageWrite: VersionDigest,\n});\n\nconst IDOperation = bcs.enum('IDOperation', {\n    None: null,\n    Created: null,\n    Deleted: null,\n});\n\nconst EffectsObjectChange = bcs.struct('EffectsObjectChange', {\n    inputState: ObjectIn,\n    outputState: ObjectOut,\n    idOperation: IDOperation,\n});\n\nconst UnchangedSharedKind = bcs.enum('UnchangedSharedKind', {\n    ReadOnlyRoot: VersionDigest,\n    MutateDeleted: bcs.u64(),\n    ReadDeleted: bcs.u64(),\n    Cancelled: bcs.u64(),\n    PerEpochConfig: null,\n});\n\nconst TransactionEffectsV1 = bcs.struct('TransactionEffectsV1', {\n    status: ExecutionStatus,\n    executedEpoch: bcs.u64(),\n    gasUsed: GasCostSummary,\n    transactionDigest: ObjectDigest,\n    gasObjectIndex: bcs.option(bcs.u32()),\n    eventsDigest: bcs.option(ObjectDigest),\n    dependencies: bcs.vector(ObjectDigest),\n    lamportVersion: bcs.u64(),\n    changedObjects: bcs.vector(bcs.tuple([Address, EffectsObjectChange])),\n    unchangedSharedObjects: bcs.vector(bcs.tuple([Address, UnchangedSharedKind])),\n    auxDataDigest: bcs.option(ObjectDigest),\n});\n\nexport const TransactionEffects = bcs.enum('TransactionEffects', {\n    V1: TransactionEffectsV1,\n});\n"],
  "mappings": "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",
  "names": ["import_bcs"]
}
