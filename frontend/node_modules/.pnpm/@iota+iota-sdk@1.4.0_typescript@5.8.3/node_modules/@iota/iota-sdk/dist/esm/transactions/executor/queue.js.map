{
  "version": 3,
  "sources": ["../../../../src/transactions/executor/queue.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nexport class SerialQueue {\n    #queue: Array<() => void> = [];\n\n    async runTask<T>(task: () => Promise<T>): Promise<T> {\n        return new Promise((resolve, reject) => {\n            this.#queue.push(() => {\n                task()\n                    .finally(() => {\n                        this.#queue.shift();\n                        if (this.#queue.length > 0) {\n                            this.#queue[0]();\n                        }\n                    })\n                    .then(resolve, reject);\n            });\n\n            if (this.#queue.length === 1) {\n                this.#queue[0]();\n            }\n        });\n    }\n}\n\nexport class ParallelQueue {\n    #queue: Array<() => void> = [];\n    activeTasks = 0;\n    maxTasks: number;\n\n    constructor(maxTasks: number) {\n        this.maxTasks = maxTasks;\n    }\n\n    runTask<T>(task: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            if (this.activeTasks < this.maxTasks) {\n                this.activeTasks++;\n\n                task()\n                    .finally(() => {\n                        if (this.#queue.length > 0) {\n                            this.#queue.shift()!();\n                        } else {\n                            this.activeTasks--;\n                        }\n                    })\n                    .then(resolve, reject);\n            } else {\n                this.#queue.push(() => {\n                    task()\n                        .finally(() => {\n                            if (this.#queue.length > 0) {\n                                this.#queue.shift()!();\n                            } else {\n                                this.activeTasks--;\n                            }\n                        })\n                        .then(resolve, reject);\n                });\n            }\n        });\n    }\n}\n"],
  "mappings": ";;;;;;AAAA,YAAAA;AAIO,MAAM,YAAY;AAAA,EAAlB;AACH,+BAA4B,CAAC;AAAA;AAAA,EAE7B,MAAM,QAAW,MAAoC;AACjD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,yBAAK,QAAO,KAAK,MAAM;AACnB,aAAK,EACA,QAAQ,MAAM;AACX,6BAAK,QAAO,MAAM;AAClB,cAAI,mBAAK,QAAO,SAAS,GAAG;AACxB,+BAAK,QAAO,CAAC,EAAE;AAAA,UACnB;AAAA,QACJ,CAAC,EACA,KAAK,SAAS,MAAM;AAAA,MAC7B,CAAC;AAED,UAAI,mBAAK,QAAO,WAAW,GAAG;AAC1B,2BAAK,QAAO,CAAC,EAAE;AAAA,MACnB;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AApBI;AAsBG,MAAM,cAAc;AAAA,EAKvB,YAAY,UAAkB;AAJ9B,uBAAAA,SAA4B,CAAC;AAC7B,uBAAc;AAIV,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,QAAW,MAAoC;AAC3C,WAAO,IAAI,QAAW,CAAC,SAAS,WAAW;AACvC,UAAI,KAAK,cAAc,KAAK,UAAU;AAClC,aAAK;AAEL,aAAK,EACA,QAAQ,MAAM;AACX,cAAI,mBAAKA,SAAO,SAAS,GAAG;AACxB,+BAAKA,SAAO,MAAM,EAAG;AAAA,UACzB,OAAO;AACH,iBAAK;AAAA,UACT;AAAA,QACJ,CAAC,EACA,KAAK,SAAS,MAAM;AAAA,MAC7B,OAAO;AACH,2BAAKA,SAAO,KAAK,MAAM;AACnB,eAAK,EACA,QAAQ,MAAM;AACX,gBAAI,mBAAKA,SAAO,SAAS,GAAG;AACxB,iCAAKA,SAAO,MAAM,EAAG;AAAA,YACzB,OAAO;AACH,mBAAK;AAAA,YACT;AAAA,UACJ,CAAC,EACA,KAAK,SAAS,MAAM;AAAA,QAC7B,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AArCIA,UAAA;",
  "names": ["_queue"]
}
