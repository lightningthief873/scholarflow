{
  "version": 3,
  "sources": ["../../../src/cryptography/mnemonics.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\nimport { toHEX } from '@iota/bcs';\nimport { mnemonicToSeedSync as bip39MnemonicToSeedSync } from '@scure/bip39';\n\n/**\n * Parse and validate a path that is compliant to SLIP-0010 in form m/44'/4218'/{account_index}'/{change_index}'/{address_index}'.\n *\n * @param path path string (e.g. `m/44'/4218'/0'/0'/0'`).\n */\nexport function isValidHardenedPath(path: string): boolean {\n    if (!new RegExp(\"^m\\\\/44'\\\\/4218'\\\\/[0-9]+'\\\\/[0-9]+'\\\\/[0-9]+'+$\").test(path)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Parse and validate a path that is compliant to BIP-32 in form m/54'/4218'/{account_index}'/{change_index}/{address_index}\n * for Secp256k1 and m/74'/4218'/{account_index}'/{change_index}/{address_index} for Secp256r1.\n *\n * Note that the purpose for Secp256k1 is registered as 54, to differentiate from Ed25519 with purpose 44.\n *\n * @param path path string (e.g. `m/54'/4218'/0'/0/0`).\n */\nexport function isValidBIP32Path(path: string): boolean {\n    if (!new RegExp(\"^m\\\\/(54|74)'\\\\/4218'\\\\/[0-9]+'\\\\/[0-9]+\\\\/[0-9]+$\").test(path)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Uses KDF to derive 64 bytes of key data from mnemonic with empty password.\n *\n * @param mnemonics 24 words string split by spaces.\n */\nexport function mnemonicToSeed(mnemonics: string): Uint8Array {\n    return bip39MnemonicToSeedSync(mnemonics, '');\n}\n\n/**\n * Derive the seed in hex format from a 24-word mnemonic string.\n *\n * @param mnemonics 24 words string split by spaces.\n */\nexport function mnemonicToSeedHex(mnemonics: string): string {\n    return toHEX(mnemonicToSeed(mnemonics));\n}\n"],
  "mappings": "AAGA,SAAS,aAAa;AACtB,SAAS,sBAAsB,+BAA+B;AAOvD,SAAS,oBAAoB,MAAuB;AACvD,MAAI,CAAC,IAAI,OAAO,kDAAkD,EAAE,KAAK,IAAI,GAAG;AAC5E,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAUO,SAAS,iBAAiB,MAAuB;AACpD,MAAI,CAAC,IAAI,OAAO,oDAAoD,EAAE,KAAK,IAAI,GAAG;AAC9E,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAOO,SAAS,eAAe,WAA+B;AAC1D,SAAO,wBAAwB,WAAW,EAAE;AAChD;AAOO,SAAS,kBAAkB,WAA2B;AACzD,SAAO,MAAM,eAAe,SAAS,CAAC;AAC1C;",
  "names": []
}
