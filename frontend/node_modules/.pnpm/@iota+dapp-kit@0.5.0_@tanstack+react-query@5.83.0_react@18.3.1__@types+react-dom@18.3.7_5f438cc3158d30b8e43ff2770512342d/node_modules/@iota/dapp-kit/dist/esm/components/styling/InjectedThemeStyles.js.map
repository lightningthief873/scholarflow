{
  "version": 3,
  "sources": ["../../../../src/components/styling/InjectedThemeStyles.tsx", "../../../../src/constants/styleDataAttribute.ts", "../../../../src/themes/themeContract.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\n\nimport { styleDataAttributeSelector } from '../../constants/styleDataAttribute.js';\nimport { themeVars } from '../../themes/themeContract.js';\nimport type { DynamicTheme, Theme, ThemeVars } from '../../themes/themeContract.js';\n\ntype InjectedThemeStylesProps = {\n    theme: Theme;\n};\n\nexport function InjectedThemeStyles({ theme }: InjectedThemeStylesProps) {\n    const themeStyles = Array.isArray(theme)\n        ? getDynamicThemeStyles(theme)\n        : getStaticThemeStyles(theme);\n\n    return (\n        <style\n            // @ts-expect-error The precedence prop hasn't made it to the stable release of React, but we\n            // don't want this to break in frameworks like Next which use the latest canary build.\n            precedence=\"default\"\n            href=\"iota-dapp-kit-theme\"\n            dangerouslySetInnerHTML={{\n                __html: themeStyles,\n            }}\n        />\n    );\n}\n\nfunction getDynamicThemeStyles(themes: DynamicTheme[]) {\n    return themes\n        .map(({ mediaQuery, selector, variables }) => {\n            const themeStyles = getStaticThemeStyles(variables);\n            const themeStylesWithSelectorPrefix = selector\n                ? `${selector} ${themeStyles}`\n                : themeStyles;\n\n            return mediaQuery\n                ? `@media ${mediaQuery}{${themeStylesWithSelectorPrefix}}`\n                : themeStylesWithSelectorPrefix;\n        })\n        .join(' ');\n}\n\nfunction getStaticThemeStyles(theme: ThemeVars) {\n    return `${styleDataAttributeSelector} {${cssStringFromTheme(theme)}}`;\n}\n\nfunction cssStringFromTheme(theme: ThemeVars) {\n    return Object.entries(assignInlineVars(themeVars, theme))\n        .map(([key, value]) => `${key}:${value};`)\n        .join('');\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nexport const styleDataAttributeName = 'data-dapp-kit';\n\nexport const styleDataAttributeSelector = `[${styleDataAttributeName}]`;\n\nexport const styleDataAttribute = { [styleDataAttributeName]: '' };\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createGlobalThemeContract } from '@vanilla-extract/css';\n\nconst themeContractValues = {\n    blurs: {\n        modalOverlay: '',\n    },\n    backgroundColors: {\n        primaryButton: '',\n        primaryButtonHover: '',\n        outlineButtonHover: '',\n        walletItemHover: '',\n        walletItemSelected: '',\n        modalOverlay: '',\n        modalPrimary: '',\n        modalSecondary: '',\n        iconButton: '',\n        dropdownMenu: '',\n        dropdownMenuSeparator: '',\n        scrollThumb: '',\n    },\n    borderColors: {\n        outlineButton: '',\n    },\n    colors: {\n        primaryButton: '',\n        outlineButtonHover: '',\n        body: '',\n        bodyMuted: '',\n        bodyDanger: '',\n        iconButton: '',\n    },\n    radii: {\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n        full: '',\n    },\n    fontWeights: {\n        normal: '',\n        medium: '',\n        bold: '',\n    },\n    fontSizes: {\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n    },\n    typography: {\n        fontFamily: '',\n        fontStyle: '',\n        lineHeight: '',\n        letterSpacing: '',\n    },\n    spacing: {\n        xxsmall: '',\n        xsmall: '',\n        small: '',\n        medium: '',\n        large: '',\n        xlarge: '',\n    },\n};\n\nexport type ThemeVars = typeof themeContractValues;\n\n/**\n * A custom theme that is enabled when various conditions are\n */\nexport type DynamicTheme = {\n    /**\n     * An optional media query required for the given theme to be enabled. This is useful\n     * when you want the theme of your application to automatically switch depending on\n     * a media feature.\n     *\n     * @example '(prefers-color-scheme: dark)'\n     */\n    mediaQuery?: string;\n\n    /**\n     * An optional CSS selector required for the given theme to be enabled. This is useful\n     * when you have a manual theme switcher on your application that sets a top-level\n     * class name or data-attribute to control the current theme.\n     *\n     * @example '.data-dark'\n     */\n    selector?: string;\n\n    /** The theme definitions that will be set when the selector and mediaQuery criteria are matched. */\n    variables: ThemeVars;\n};\n\nexport type Theme = ThemeVars | DynamicTheme[];\n\nexport const themeVars = createGlobalThemeContract(\n    themeContractValues,\n    (_, path) => `dapp-kit-${path.join('-')}`,\n);\n"],
  "mappings": ";AAIA,SAAS,wBAAwB;;;ACA1B,IAAM,yBAAyB;AAE/B,IAAM,6BAA6B,IAAI,sBAAsB;AAE7D,IAAM,qBAAqB,EAAE,CAAC,sBAAsB,GAAG,GAAG;;;ACJjE,SAAS,iCAAiC;AAE1C,IAAM,sBAAsB;AAAA,EACxB,OAAO;AAAA,IACH,cAAc;AAAA,EAClB;AAAA,EACA,kBAAkB;AAAA,IACd,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,uBAAuB;AAAA,IACvB,aAAa;AAAA,EACjB;AAAA,EACA,cAAc;AAAA,IACV,eAAe;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,IACJ,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,EAChB;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA,aAAa;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA,WAAW;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACR,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,eAAe;AAAA,EACnB;AAAA,EACA,SAAS;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,EACZ;AACJ;AAgCO,IAAM,YAAY;AAAA,EACrB;AAAA,EACA,CAAC,GAAG,SAAS,YAAY,KAAK,KAAK,GAAG,CAAC;AAC3C;;;AFlFQ;AAND,SAAS,oBAAoB,EAAE,MAAM,GAA6B;AACrE,QAAM,cAAc,MAAM,QAAQ,KAAK,IACjC,sBAAsB,KAAK,IAC3B,qBAAqB,KAAK;AAEhC,SACI;AAAA,IAAC;AAAA;AAAA,MAGG,YAAW;AAAA,MACX,MAAK;AAAA,MACL,yBAAyB;AAAA,QACrB,QAAQ;AAAA,MACZ;AAAA;AAAA,EACJ;AAER;AAEA,SAAS,sBAAsB,QAAwB;AACnD,SAAO,OACF,IAAI,CAAC,EAAE,YAAY,UAAU,UAAU,MAAM;AAC1C,UAAM,cAAc,qBAAqB,SAAS;AAClD,UAAM,gCAAgC,WAChC,GAAG,QAAQ,IAAI,WAAW,KAC1B;AAEN,WAAO,aACD,UAAU,UAAU,IAAI,6BAA6B,MACrD;AAAA,EACV,CAAC,EACA,KAAK,GAAG;AACjB;AAEA,SAAS,qBAAqB,OAAkB;AAC5C,SAAO,GAAG,0BAA0B,KAAK,mBAAmB,KAAK,CAAC;AACtE;AAEA,SAAS,mBAAmB,OAAkB;AAC1C,SAAO,OAAO,QAAQ,iBAAiB,WAAW,KAAK,CAAC,EACnD,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,GAAG,IAAI,KAAK,GAAG,EACxC,KAAK,EAAE;AAChB;",
  "names": []
}
