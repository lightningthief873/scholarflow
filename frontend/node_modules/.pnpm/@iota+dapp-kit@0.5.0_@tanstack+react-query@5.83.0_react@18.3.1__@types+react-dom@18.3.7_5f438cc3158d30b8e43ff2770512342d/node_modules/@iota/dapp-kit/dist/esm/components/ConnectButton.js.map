{
  "version": 3,
  "sources": ["vanilla-extract-css-ns:src/components/styling/StyleMarker.css.ts.vanilla.css?source=OndoZXJlKCopIHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGNvbG9yOiB2YXIoLS1kYXBwLWtpdC1jb2xvcnMtYm9keSk7CiAgZm9udC1mYW1pbHk6IHZhcigtLWRhcHAta2l0LXR5cG9ncmFwaHktZm9udEZhbWlseSk7CiAgZm9udC1zaXplOiB2YXIoLS1kYXBwLWtpdC1mb250V2VpZ2h0cy1ub3JtYWwpOwogIGZvbnQtc3R5bGU6IHZhcigtLWRhcHAta2l0LXR5cG9ncmFwaHktZm9udFN0eWxlKTsKICBmb250LXdlaWdodDogdmFyKC0tZGFwcC1raXQtZm9udFdlaWdodHMtbm9ybWFsKTsKICBsaW5lLWhlaWdodDogdmFyKC0tZGFwcC1raXQtdHlwb2dyYXBoeS1saW5lSGVpZ2h0KTsKICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZGFwcC1raXQtdHlwb2dyYXBoeS1sZXR0ZXJTcGFjaW5nKTsKfQo6d2hlcmUoYnV0dG9uKSB7CiAgYXBwZWFyYW5jZTogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBmb250LXNpemU6IGluaGVyaXQ7CiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7CiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7CiAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7CiAgY29sb3I6IGluaGVyaXQ7CiAgYm9yZGVyOiAwOwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwp9Cjp3aGVyZShhKSB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGNvbG9yOiBpbmhlcml0OwogIG91dGxpbmU6IG5vbmU7Cn0KOndoZXJlKG9sLCB1bCkgewogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7Cn0KOndoZXJlKGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYpIHsKICBmb250LXNpemU6IGluaGVyaXQ7CiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7CiAgbWFyZ2luOiAwOwp9", "../../../src/components/styling/StyleMarker.css.ts", "../../../src/hooks/wallet/useWalletStore.ts", "../../../src/contexts/walletContext.ts", "../../../src/hooks/wallet/useCurrentAccount.ts", "../../../src/components/AccountDropdownMenu.tsx", "../../../src/hooks/wallet/useAccounts.ts", "../../../src/hooks/wallet/useDisconnectWallet.ts", "../../../src/constants/walletMutationKeys.ts", "../../../src/errors/walletErrors.ts", "../../../src/hooks/wallet/useCurrentWallet.ts", "../../../src/hooks/wallet/useSwitchAccount.ts", "../../../src/components/AccountDropdownMenu.css.ts", "../../../src/components/icons/CheckIcon.tsx", "../../../src/components/icons/ChevronIcon.tsx", "../../../src/components/styling/StyleMarker.tsx", "../../../src/constants/styleDataAttribute.ts", "../../../src/components/ui/Button.tsx", "../../../src/components/ui/Button.css.ts", "../../../src/components/ui/Text.tsx", "../../../src/components/ui/Text.css.ts", "../../../src/components/connect-modal/ConnectModal.tsx", "../../../src/hooks/wallet/useConnectWallet.ts", "../../../src/utils/walletUtils.ts", "../../../src/components/icons/BackIcon.tsx", "../../../src/components/icons/CloseIcon.tsx", "../../../src/components/ui/Heading.tsx", "../../../src/components/ui/Heading.css.ts", "../../../src/components/ui/IconButton.tsx", "../../../src/components/ui/IconButton.css.ts", "../../../src/components/connect-modal/ConnectModal.css.ts", "../../../src/components/connect-modal/views/ConnectionStatus.css.ts", "../../../src/components/connect-modal/views/ConnectionStatus.tsx", "../../../src/components/connect-modal/InfoSection.css.ts", "../../../src/components/connect-modal/InfoSection.tsx", "../../../src/components/connect-modal/views/GettingStarted.css.ts", "../../../src/components/connect-modal/views/GettingStarted.tsx", "../../../src/components/connect-modal/views/WhatIsAWallet.css.ts", "../../../src/components/connect-modal/views/WhatIsAWallet.tsx", "../../../src/hooks/wallet/useWallets.ts", "../../../src/components/icons/IotaIcon.tsx", "../../../src/components/connect-modal/wallet-list/WalletList.css.ts", "../../../src/components/connect-modal/wallet-list/WalletListItem.tsx", "../../../src/components/connect-modal/wallet-list/WalletListItem.css.ts", "../../../src/components/connect-modal/wallet-list/WalletList.tsx", "../../../src/components/ConnectButton.tsx"],
  "sourcesContent": ["[data-dapp-kit]:where(*), [data-dapp-kit] :where(*) {\n  box-sizing: border-box;\n  color: var(--dapp-kit-colors-body);\n  font-family: var(--dapp-kit-typography-fontFamily);\n  font-size: var(--dapp-kit-fontWeights-normal);\n  font-style: var(--dapp-kit-typography-fontStyle);\n  font-weight: var(--dapp-kit-fontWeights-normal);\n  line-height: var(--dapp-kit-typography-lineHeight);\n  letter-spacing: var(--dapp-kit-typography-letterSpacing);\n}\n[data-dapp-kit]:where(button), [data-dapp-kit] :where(button) {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  background-color: transparent;\n  font-size: inherit;\n  font-family: inherit;\n  line-height: inherit;\n  letter-spacing: inherit;\n  color: inherit;\n  border: 0;\n  padding: 0;\n  margin: 0;\n}\n[data-dapp-kit]:where(a), [data-dapp-kit] :where(a) {\n  text-decoration: none;\n  color: inherit;\n  outline: none;\n}\n[data-dapp-kit]:where(ol, ul), [data-dapp-kit] :where(ol, ul) {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n[data-dapp-kit]:where(h1, h2, h3, h4, h5, h6), [data-dapp-kit] :where(h1, h2, h3, h4, h5, h6) {\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 0;\n}", "import 'src/components/styling/StyleMarker.css.ts.vanilla.css?source=OndoZXJlKCopIHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGNvbG9yOiB2YXIoLS1kYXBwLWtpdC1jb2xvcnMtYm9keSk7CiAgZm9udC1mYW1pbHk6IHZhcigtLWRhcHAta2l0LXR5cG9ncmFwaHktZm9udEZhbWlseSk7CiAgZm9udC1zaXplOiB2YXIoLS1kYXBwLWtpdC1mb250V2VpZ2h0cy1ub3JtYWwpOwogIGZvbnQtc3R5bGU6IHZhcigtLWRhcHAta2l0LXR5cG9ncmFwaHktZm9udFN0eWxlKTsKICBmb250LXdlaWdodDogdmFyKC0tZGFwcC1raXQtZm9udFdlaWdodHMtbm9ybWFsKTsKICBsaW5lLWhlaWdodDogdmFyKC0tZGFwcC1raXQtdHlwb2dyYXBoeS1saW5lSGVpZ2h0KTsKICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZGFwcC1raXQtdHlwb2dyYXBoeS1sZXR0ZXJTcGFjaW5nKTsKfQo6d2hlcmUoYnV0dG9uKSB7CiAgYXBwZWFyYW5jZTogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBmb250LXNpemU6IGluaGVyaXQ7CiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7CiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7CiAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7CiAgY29sb3I6IGluaGVyaXQ7CiAgYm9yZGVyOiAwOwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwp9Cjp3aGVyZShhKSB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGNvbG9yOiBpbmhlcml0OwogIG91dGxpbmU6IG5vbmU7Cn0KOndoZXJlKG9sLCB1bCkgewogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7Cn0KOndoZXJlKGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYpIHsKICBmb250LXNpemU6IGluaGVyaXQ7CiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7CiAgbWFyZ2luOiAwOwp9';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useContext } from 'react';\nimport { useStore } from 'zustand';\n\nimport { WalletContext } from '../../contexts/walletContext.js';\nimport type { StoreState } from '../../walletStore.js';\n\nexport function useWalletStore<T>(selector: (state: StoreState) => T): T {\n    const store = useContext(WalletContext);\n    if (!store) {\n        throw new Error(\n            'Could not find WalletContext. Ensure that you have set up the WalletProvider.',\n        );\n    }\n    return useStore(store, selector);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { createContext } from 'react';\n\nimport type { WalletStore } from '../walletStore.js';\n\nexport const WalletContext = createContext<WalletStore | null>(null);\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletAccount } from '@iota/wallet-standard';\n\nimport { useWalletStore } from './useWalletStore.js';\n\n/**\n * Retrieves the wallet account that is currently selected, if one exists.\n */\nexport function useCurrentAccount(): WalletAccount | null {\n    return useWalletStore((state) => state.currentAccount);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { formatAddress } from '@iota/iota-sdk/utils';\nimport type { WalletAccount } from '@iota/wallet-standard';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport clsx from 'clsx';\n\nimport { useAccounts } from '../hooks/wallet/useAccounts.js';\nimport { useDisconnectWallet } from '../hooks/wallet/useDisconnectWallet.js';\nimport { useSwitchAccount } from '../hooks/wallet/useSwitchAccount.js';\nimport * as styles from './AccountDropdownMenu.css.js';\nimport { CheckIcon } from './icons/CheckIcon.js';\nimport { ChevronIcon } from './icons/ChevronIcon.js';\nimport { StyleMarker } from './styling/StyleMarker.js';\nimport { Button } from './ui/Button.js';\nimport { Text } from './ui/Text.js';\n\ntype AccountDropdownMenuProps = {\n    currentAccount: WalletAccount;\n    size?: React.ComponentProps<typeof Button>['size'];\n};\n\nexport function AccountDropdownMenu({ currentAccount, size = 'lg' }: AccountDropdownMenuProps) {\n    const { mutate: disconnectWallet } = useDisconnectWallet();\n    const accounts = useAccounts();\n\n    return (\n        <DropdownMenu.Root modal={false}>\n            <StyleMarker>\n                <DropdownMenu.Trigger asChild>\n                    <Button size={size} className={styles.connectedAccount}>\n                        <Text mono weight=\"bold\">\n                            {currentAccount.label ?? formatAddress(currentAccount.address)}\n                        </Text>\n                        <ChevronIcon />\n                    </Button>\n                </DropdownMenu.Trigger>\n            </StyleMarker>\n            <DropdownMenu.Portal>\n                <StyleMarker className={styles.menuContainer}>\n                    <DropdownMenu.Content className={styles.menuContent}>\n                        <div className={styles.scrollableContent}>\n                            {accounts.map((account) => (\n                                <AccountDropdownMenuItem\n                                    key={account.address}\n                                    account={account}\n                                    active={currentAccount.address === account.address}\n                                />\n                            ))}\n                        </div>\n                        <DropdownMenu.Separator className={styles.separator} />\n                        <DropdownMenu.Item\n                            className={clsx(styles.menuItem)}\n                            onSelect={() => disconnectWallet()}\n                        >\n                            Disconnect\n                        </DropdownMenu.Item>\n                    </DropdownMenu.Content>\n                </StyleMarker>\n            </DropdownMenu.Portal>\n        </DropdownMenu.Root>\n    );\n}\n\nexport function AccountDropdownMenuItem({\n    account,\n    active,\n}: {\n    account: WalletAccount;\n    active?: boolean;\n}) {\n    const { mutate: switchAccount } = useSwitchAccount();\n\n    return (\n        <DropdownMenu.Item\n            className={clsx(styles.menuItem, styles.switchAccountMenuItem)}\n            onSelect={() => switchAccount({ account })}\n        >\n            <Text mono>{account.label ?? formatAddress(account.address)}</Text>\n            {active ? <CheckIcon /> : null}\n        </DropdownMenu.Item>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletAccount } from '@iota/wallet-standard';\n\nimport { useWalletStore } from './useWalletStore.js';\n\n/**\n * Retrieves a list of connected accounts authorized by the dApp.\n */\nexport function useAccounts(): readonly WalletAccount[] {\n    return useWalletStore((state) => state.accounts);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { UseMutationOptions, UseMutationResult } from '@tanstack/react-query';\nimport { useMutation } from '@tanstack/react-query';\n\nimport { walletMutationKeys } from '../../constants/walletMutationKeys.js';\nimport { WalletNotConnectedError } from '../../errors/walletErrors.js';\nimport { useCurrentWallet } from './useCurrentWallet.js';\nimport { useWalletStore } from './useWalletStore.js';\n\ntype UseDisconnectWalletError = WalletNotConnectedError | Error;\n\ntype UseDisconnectWalletMutationOptions = Omit<\n    UseMutationOptions<void, UseDisconnectWalletError, void, unknown>,\n    'mutationFn'\n>;\n\n/**\n * Mutation hook for disconnecting from an active wallet connection, if currently connected.\n */\nexport function useDisconnectWallet({\n    mutationKey,\n    ...mutationOptions\n}: UseDisconnectWalletMutationOptions = {}): UseMutationResult<\n    void,\n    UseDisconnectWalletError,\n    void\n> {\n    const { currentWallet } = useCurrentWallet();\n    const setWalletDisconnected = useWalletStore((state) => state.setWalletDisconnected);\n\n    return useMutation({\n        mutationKey: walletMutationKeys.disconnectWallet(mutationKey),\n        mutationFn: async () => {\n            if (!currentWallet) {\n                throw new WalletNotConnectedError('No wallet is connected.');\n            }\n\n            try {\n                // Wallets aren't required to implement the disconnect feature, so we'll\n                // optionally call the disconnect feature if it exists and reset the UI\n                // state on the frontend at a minimum.\n                await currentWallet.features['standard:disconnect']?.disconnect();\n            } catch (error) {\n                console.error(\n                    'Failed to disconnect the application from the current wallet.',\n                    error,\n                );\n            }\n\n            setWalletDisconnected();\n        },\n        ...mutationOptions,\n    });\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { MutationKey } from '@tanstack/react-query';\n\nexport const walletMutationKeys = {\n    all: { baseScope: 'wallet' },\n    connectWallet: formMutationKeyFn('connect-wallet'),\n    autoconnectWallet: formMutationKeyFn('autoconnect-wallet'),\n    disconnectWallet: formMutationKeyFn('disconnect-wallet'),\n    signPersonalMessage: formMutationKeyFn('sign-personal-message'),\n    signTransaction: formMutationKeyFn('sign-transaction'),\n    signAndExecuteTransaction: formMutationKeyFn('sign-and-execute-transaction'),\n    switchAccount: formMutationKeyFn('switch-account'),\n    reportTransactionEffects: formMutationKeyFn('report-transaction-effects'),\n};\n\nfunction formMutationKeyFn(baseEntity: string) {\n    return function mutationKeyFn(additionalKeys: MutationKey = []) {\n        return [{ ...walletMutationKeys.all, baseEntity }, ...additionalKeys];\n    };\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * An error that is instantiated when someone attempts to perform an action that requires an active wallet connection.\n */\nexport class WalletNotConnectedError extends Error {}\n\n/**\n * An error that is instantiated when someone attempts to perform an action that requires a selected wallet account.\n * This is more of an edge case stemming from the fact that wallets don't technically require you to authorize any\n * accounts when connecting a wallet.\n */\nexport class WalletNoAccountSelectedError extends Error {}\n\n/**\n * An error that is instantiated when someone attempts to perform an action that isn't supported by a wallet.\n */\nexport class WalletFeatureNotSupportedError extends Error {}\n\n/**\n * An error that is instantiated when a wallet account can't be found for a specific wallet.\n */\nexport class WalletAccountNotFoundError extends Error {}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useWalletStore } from './useWalletStore.js';\n\n/**\n * Retrieves the wallet that is currently connected to the dApp, if one exists.\n */\nexport function useCurrentWallet() {\n    const currentWallet = useWalletStore((state) => state.currentWallet);\n    const connectionStatus = useWalletStore((state) => state.connectionStatus);\n    const supportedIntents = useWalletStore((state) => state.supportedIntents);\n\n    switch (connectionStatus) {\n        case 'connecting':\n            return {\n                connectionStatus,\n                currentWallet: null,\n                isDisconnected: false,\n                isConnecting: true,\n                isConnected: false,\n                supportedIntents: [],\n            } as const;\n        case 'disconnected':\n            return {\n                connectionStatus,\n                currentWallet: null,\n                isDisconnected: true,\n                isConnecting: false,\n                isConnected: false,\n                supportedIntents: [],\n            } as const;\n        case 'connected': {\n            return {\n                connectionStatus,\n                currentWallet: currentWallet!,\n                isDisconnected: false,\n                isConnecting: false,\n                isConnected: true,\n                supportedIntents,\n            } as const;\n        }\n    }\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletAccount } from '@iota/wallet-standard';\nimport type { UseMutationOptions, UseMutationResult } from '@tanstack/react-query';\nimport { useMutation } from '@tanstack/react-query';\n\nimport { walletMutationKeys } from '../../constants/walletMutationKeys.js';\nimport { WalletAccountNotFoundError, WalletNotConnectedError } from '../../errors/walletErrors.js';\nimport { useCurrentWallet } from './useCurrentWallet.js';\nimport { useWalletStore } from './useWalletStore.js';\n\ntype SwitchAccountArgs = {\n    account: WalletAccount;\n};\n\ntype SwitchAccountResult = void;\n\ntype UseSwitchAccountError = WalletNotConnectedError | WalletAccountNotFoundError | Error;\n\ntype UseSwitchAccountMutationOptions = Omit<\n    UseMutationOptions<SwitchAccountResult, UseSwitchAccountError, SwitchAccountArgs, unknown>,\n    'mutationFn'\n>;\n\n/**\n * Mutation hook for switching to a specific wallet account.\n */\nexport function useSwitchAccount({\n    mutationKey,\n    ...mutationOptions\n}: UseSwitchAccountMutationOptions = {}): UseMutationResult<\n    SwitchAccountResult,\n    UseSwitchAccountError,\n    SwitchAccountArgs\n> {\n    const { currentWallet } = useCurrentWallet();\n    const setAccountSwitched = useWalletStore((state) => state.setAccountSwitched);\n\n    return useMutation({\n        mutationKey: walletMutationKeys.switchAccount(mutationKey),\n        mutationFn: async ({ account }) => {\n            if (!currentWallet) {\n                throw new WalletNotConnectedError('No wallet is connected.');\n            }\n\n            const accountToSelect = currentWallet.accounts.find(\n                (walletAccount) => walletAccount.address === account.address,\n            );\n            if (!accountToSelect) {\n                throw new WalletAccountNotFoundError(\n                    `No account with address ${account.address} is connected to ${currentWallet.name}.`,\n                );\n            }\n\n            setAccountSwitched(accountToSelect);\n        },\n        ...mutationOptions,\n    });\n}\n", "import 'src/components/AccountDropdownMenu.css.ts.vanilla.css?source=#H4sIAAAAAAAAA6VTPW/bMBDd/Ss4NgMDqXGLlJmSdOmQqWNRGDR5plhTdwR5jOQW/e+FGH/BidMG1ULg3ed773R5awwV5M+JoqUBHwDLwhAiGAa7DS4W7di4Pq4a8WsmhNNRies43sx+zy5fqu8Byz0ha4+Q9sVtLf4pPVoYlfi0+/7aBo42eF+bWJ9j0BslVgHGm5mor7Q+gWFPqIShUHqcIoO33CnRXjexZvZ6lB1417ESV80eTM6jZIpKzJ+gqK316LZEj0kLsaRkIcmkrS9ZiUed3klpdYxy7bnCXgadHFzUbG3WLlFBKw0FSs8KDgn3UzxLe6TCxVl5skkUgl4GOBXpqopEj5BWgQa5UUIXprPsq3gu0aBE+6oZXxj6/ZB5HXIq0675fNu7ZEgyQwDDSiAhTCAVDh7hADzzUwfvUHqGPithABnSW4X/Zx7frGYtO++6MO0O9ntl9nbbYvK9Tpu7wkz4im+DZ9NtIw+n63x4+cB/lMx+tZHmyWolctQG5BJ4AMCzkp1bAaJOmunwc36sY3futUeHkbvkca1E8/+3/HU3dhLnD4QDgFt6BAAA';\nexport var connectedAccount = 'AccountDropdownMenu_connectedAccount__1x0gmpf0';\nexport var menuContainer = 'AccountDropdownMenu_menuContainer__1x0gmpf1';\nexport var menuContent = 'AccountDropdownMenu_menuContent__1x0gmpf2';\nexport var menuItem = 'AccountDropdownMenu_menuItem__1x0gmpf4';\nexport var scrollableContent = 'AccountDropdownMenu_scrollableContent__1x0gmpf3';\nexport var separator = 'AccountDropdownMenu_separator__1x0gmpf6';\nexport var switchAccountMenuItem = 'AccountDropdownMenu_switchAccountMenuItem__1x0gmpf5';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ComponentProps } from 'react';\n\nexport function CheckIcon(props: ComponentProps<'svg'>) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n            <path\n                fill=\"currentColor\"\n                d=\"m11.726 5.048-4.73 5.156-1.722-1.879a.72.72 0 0 0-.529-.23.722.722 0 0 0-.525.24.858.858 0 0 0-.22.573.86.86 0 0 0 .211.576l2.255 2.458c.14.153.332.24.53.24.2 0 .391-.087.532-.24l5.261-5.735A.86.86 0 0 0 13 5.63a.858.858 0 0 0-.22-.572.722.722 0 0 0-.525-.24.72.72 0 0 0-.529.23Z\"\n            />\n        </svg>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ComponentProps } from 'react';\n\nexport function ChevronIcon(props: ComponentProps<'svg'>) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" {...props}>\n            <path\n                stroke=\"#A0B6C3\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={1.5}\n                d=\"m4 6 4 4 4-4\"\n            />\n        </svg>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Slot } from '@radix-ui/react-slot';\nimport type { ComponentPropsWithoutRef, ElementRef, ReactNode } from 'react';\nimport { forwardRef } from 'react';\n\nimport { styleDataAttribute } from '../../constants/styleDataAttribute.js';\n\nimport './StyleMarker.css.js';\n\ntype StyleMarker = {\n    children: ReactNode;\n};\n\nexport const StyleMarker = forwardRef<\n    ElementRef<typeof Slot>,\n    ComponentPropsWithoutRef<typeof Slot>\n>(({ children, ...props }, forwardedRef) => (\n    <Slot ref={forwardedRef} {...props} {...styleDataAttribute}>\n        {children}\n    </Slot>\n));\nStyleMarker.displayName = 'StyleMarker';\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nexport const styleDataAttributeName = 'data-dapp-kit';\n\nexport const styleDataAttributeSelector = `[${styleDataAttributeName}]`;\n\nexport const styleDataAttribute = { [styleDataAttributeName]: '' };\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Slot } from '@radix-ui/react-slot';\nimport clsx from 'clsx';\nimport type { ButtonHTMLAttributes } from 'react';\nimport { forwardRef } from 'react';\n\nimport { buttonVariants } from './Button.css.js';\nimport type { ButtonVariants } from './Button.css.js';\n\ntype ButtonProps = {\n    asChild?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement> &\n    ButtonVariants;\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, forwardedRef) => {\n        const Comp = asChild ? Slot : 'button';\n        return (\n            <Comp\n                {...props}\n                className={clsx(buttonVariants({ variant, size }), className)}\n                ref={forwardedRef}\n            />\n        );\n    },\n);\nButton.displayName = 'Button';\n\nexport { Button };\n", "import 'src/components/ui/Button.css.ts.vanilla.css?source=#H4sIAAAAAAAAA7WSwVLCMBCG732KPcohDCA6TrjpxSfQYydt0rKQJplkC60O7+6ktCMKog56Smb/ZP9v/2R8XxNZk2bd8iQ8CkMhTXPKmpmZwGsCIDE4LVoOaDQaxQqtmkUCIDSWhiGpKnDIlSHlY3lVB8KiZbk1pAwdSoU1xLYKyyVx2Ah/xZgUzrE1EovacycFVimJdTVaJLtkfB6QSwwi00p2pNaJHKnlMBnfnLm82W9S57ESvh2aTbsemcjXpbe1kSy32voj0PcDD1EPrG+z9xrFOU9fzE8f/zUmX9qN8n8B+xgb/QTB1hSffkCY7c2tl8qzLUpacpi67lP0xUCtVhyC1SgPyl9AdmIP2Fv9W5qfR7kozQ+w36YZ8EWllRysrw9T9EJiHY4cYxlZUWvdReGElGhKDneugeltjPy8my4Ht/kFbtEJZnPXwCLZvQFzXfF3MwQAAA==';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var buttonVariants = _7a468({defaultClassName:'Button_buttonVariants__ctbx2n0',variantClassNames:{variant:{primary:'Button_buttonVariants_variant_primary__ctbx2n1',outline:'Button_buttonVariants_variant_outline__ctbx2n2'},size:{md:'Button_buttonVariants_size_md__ctbx2n3',lg:'Button_buttonVariants_size_lg__ctbx2n4'}},defaultVariants:{variant:'primary',size:'md'},compoundVariants:[]});", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Slot } from '@radix-ui/react-slot';\nimport clsx from 'clsx';\nimport { forwardRef } from 'react';\n\nimport { textVariants } from './Text.css.js';\nimport type { TextVariants } from './Text.css.js';\n\ntype TextAsChildProps = {\n    asChild?: boolean;\n    as?: never;\n};\n\ntype TextDivProps = { as: 'div'; asChild?: never };\n\ntype TextProps = (TextAsChildProps | TextDivProps) &\n    React.HTMLAttributes<HTMLDivElement> &\n    TextVariants;\n\nconst Text = forwardRef<HTMLDivElement, TextProps>(\n    (\n        {\n            children,\n            className,\n            asChild = false,\n            as: Tag = 'div',\n            size,\n            weight,\n            color,\n            mono,\n            ...textProps\n        },\n        forwardedRef,\n    ) => {\n        return (\n            <Slot\n                {...textProps}\n                ref={forwardedRef}\n                className={clsx(textVariants({ size, weight, color, mono }), className)}\n            >\n                {asChild ? children : <Tag>{children}</Tag>}\n            </Slot>\n        );\n    },\n);\nText.displayName = 'Text';\n\nexport { Text };\n", "import 'src/components/ui/Text.css.ts.vanilla.css?source=LlRleHRfdGV4dFZhcmlhbnRzX3NpemVfc21fX2FwcmhiZDEgewogIGZvbnQtc2l6ZTogdmFyKC0tZGFwcC1raXQtZm9udFNpemVzLXNtYWxsKTsKfQouVGV4dF90ZXh0VmFyaWFudHNfd2VpZ2h0X25vcm1hbF9fYXByaGJkMiB7CiAgZm9udC13ZWlnaHQ6IHZhcigtLWRhcHAta2l0LWZvbnRXZWlnaHRzLW5vcm1hbCk7Cn0KLlRleHRfdGV4dFZhcmlhbnRzX3dlaWdodF9tZWRpdW1fX2FwcmhiZDMgewogIGZvbnQtd2VpZ2h0OiB2YXIoLS1kYXBwLWtpdC1mb250V2VpZ2h0cy1tZWRpdW0pOwp9Ci5UZXh0X3RleHRWYXJpYW50c193ZWlnaHRfYm9sZF9fYXByaGJkNCB7CiAgZm9udC13ZWlnaHQ6IHZhcigtLWRhcHAta2l0LWZvbnRXZWlnaHRzLWJvbGQpOwp9Ci5UZXh0X3RleHRWYXJpYW50c19jb2xvcl9tdXRlZF9fYXByaGJkNSB7CiAgY29sb3I6IHZhcigtLWRhcHAta2l0LWNvbG9ycy1ib2R5TXV0ZWQpOwp9Ci5UZXh0X3RleHRWYXJpYW50c19jb2xvcl9kYW5nZXJfX2FwcmhiZDYgewogIGNvbG9yOiB2YXIoLS1kYXBwLWtpdC1jb2xvcnMtYm9keURhbmdlcik7Cn0KLlRleHRfdGV4dFZhcmlhbnRzX21vbm9fdHJ1ZV9fYXByaGJkNyB7CiAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAiTGliZXJhdGlvbiBNb25vIiwgIkNvdXJpZXIgTmV3IiwgbW9ub3NwYWNlOwp9';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var textVariants = _7a468({defaultClassName:'Text__aprhbd0',variantClassNames:{size:{sm:'Text_textVariants_size_sm__aprhbd1'},weight:{normal:'Text_textVariants_weight_normal__aprhbd2',medium:'Text_textVariants_weight_medium__aprhbd3',bold:'Text_textVariants_weight_bold__aprhbd4'},color:{muted:'Text_textVariants_color_muted__aprhbd5',danger:'Text_textVariants_color_danger__aprhbd6'},mono:{true:'Text_textVariants_mono_true__aprhbd7'}},defaultVariants:{size:'sm',weight:'normal'},compoundVariants:[]});", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletWithRequiredFeatures } from '@iota/wallet-standard';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport clsx from 'clsx';\nimport { useState } from 'react';\nimport type { ReactNode } from 'react';\n\nimport { useConnectWallet } from '../../hooks/wallet/useConnectWallet.js';\nimport { getWalletUniqueIdentifier } from '../../utils/walletUtils.js';\nimport { BackIcon } from '../icons/BackIcon.js';\nimport { CloseIcon } from '../icons/CloseIcon.js';\nimport { StyleMarker } from '../styling/StyleMarker.js';\nimport { Heading } from '../ui/Heading.js';\nimport { IconButton } from '../ui/IconButton.js';\nimport * as styles from './ConnectModal.css.js';\nimport { ConnectionStatus } from './views/ConnectionStatus.js';\nimport { GettingStarted } from './views/GettingStarted.js';\nimport { WhatIsAWallet } from './views/WhatIsAWallet.js';\nimport { WalletList } from './wallet-list/WalletList.js';\n\ntype ConnectModalView = 'getting-started' | 'what-is-a-wallet' | 'connection-status';\n\ntype ControlledModalProps = {\n    /** The controlled open state of the dialog. */\n    open: boolean;\n\n    /** Event handler called when the open state of the dialog changes. */\n    onOpenChange: (open: boolean) => void;\n\n    defaultOpen?: never;\n};\n\ntype UncontrolledModalProps = {\n    open?: never;\n\n    onOpenChange?: never;\n\n    /** The open state of the dialog when it is initially rendered. Use when you do not need to control its open state. */\n    defaultOpen?: boolean;\n};\n\ntype ConnectModalProps = {\n    /** The trigger button that opens the dialog. */\n    trigger: NonNullable<ReactNode>;\n} & (ControlledModalProps | UncontrolledModalProps);\n\nexport function ConnectModal({ trigger, open, defaultOpen, onOpenChange }: ConnectModalProps) {\n    const [isModalOpen, setModalOpen] = useState(open ?? defaultOpen);\n    const [currentView, setCurrentView] = useState<ConnectModalView>();\n    const [selectedWallet, setSelectedWallet] = useState<WalletWithRequiredFeatures>();\n    const { mutate, isError } = useConnectWallet();\n\n    const resetSelection = () => {\n        setSelectedWallet(undefined);\n        setCurrentView(undefined);\n    };\n\n    const handleOpenChange = (open: boolean) => {\n        if (!open) {\n            resetSelection();\n        }\n        setModalOpen(open);\n        onOpenChange?.(open);\n    };\n\n    const connectWallet = (wallet: WalletWithRequiredFeatures) => {\n        setCurrentView('connection-status');\n        mutate(\n            { wallet, silent: false },\n            {\n                onSuccess: () => handleOpenChange(false),\n            },\n        );\n    };\n\n    let modalContent: ReactNode | undefined;\n    switch (currentView) {\n        case 'what-is-a-wallet':\n            modalContent = <WhatIsAWallet />;\n            break;\n        case 'getting-started':\n            modalContent = <GettingStarted />;\n            break;\n        case 'connection-status':\n            modalContent = (\n                <ConnectionStatus\n                    selectedWallet={selectedWallet!}\n                    hadConnectionError={isError}\n                    onRetryConnection={connectWallet}\n                />\n            );\n            break;\n        default:\n            modalContent = <WhatIsAWallet />;\n    }\n\n    return (\n        <Dialog.Root open={open ?? isModalOpen} onOpenChange={handleOpenChange}>\n            <Dialog.Trigger asChild>{trigger}</Dialog.Trigger>\n            <Dialog.Portal>\n                <StyleMarker>\n                    <Dialog.Overlay className={styles.overlay}>\n                        <Dialog.Content className={styles.content} aria-describedby={undefined}>\n                            <div\n                                className={clsx(styles.walletListContainer, {\n                                    [styles.walletListContainerWithViewSelected]: !!currentView,\n                                })}\n                            >\n                                <div className={styles.walletListContent}>\n                                    <Dialog.Title className={styles.title} asChild>\n                                        <Heading as=\"h2\">Connect a Wallet</Heading>\n                                    </Dialog.Title>\n                                    <WalletList\n                                        selectedWalletName={getWalletUniqueIdentifier(\n                                            selectedWallet,\n                                        )}\n                                        onPlaceholderClick={() => setCurrentView('getting-started')}\n                                        onSelect={(wallet) => {\n                                            if (\n                                                getWalletUniqueIdentifier(selectedWallet) !==\n                                                getWalletUniqueIdentifier(wallet)\n                                            ) {\n                                                setSelectedWallet(wallet);\n                                                connectWallet(wallet);\n                                            }\n                                        }}\n                                    />\n                                </div>\n                                <button\n                                    className={styles.whatIsAWalletButton}\n                                    onClick={() => setCurrentView('what-is-a-wallet')}\n                                    type=\"button\"\n                                >\n                                    What is a Wallet?\n                                </button>\n                            </div>\n                            <div\n                                className={clsx(styles.viewContainer, {\n                                    [styles.selectedViewContainer]: !!currentView,\n                                })}\n                            >\n                                <div className={styles.backButtonContainer}>\n                                    <IconButton\n                                        type=\"button\"\n                                        aria-label=\"Back\"\n                                        onClick={() => resetSelection()}\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </div>\n                                {modalContent}\n                            </div>\n                            <Dialog.Close className={styles.closeButtonContainer} asChild>\n                                <IconButton type=\"button\" aria-label=\"Close\">\n                                    <CloseIcon />\n                                </IconButton>\n                            </Dialog.Close>\n                        </Dialog.Content>\n                    </Dialog.Overlay>\n                </StyleMarker>\n            </Dialog.Portal>\n        </Dialog.Root>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isSupportedChain } from '@iota/wallet-standard';\nimport type {\n    StandardConnectInput,\n    StandardConnectOutput,\n    WalletAccount,\n    WalletWithRequiredFeatures,\n} from '@iota/wallet-standard';\nimport type { UseMutationOptions, UseMutationResult } from '@tanstack/react-query';\nimport { useMutation } from '@tanstack/react-query';\n\nimport { walletMutationKeys } from '../../constants/walletMutationKeys.js';\nimport { useWalletStore } from './useWalletStore.js';\n\ntype ConnectWalletArgs = {\n    /** The wallet to connect to. */\n    wallet: WalletWithRequiredFeatures;\n\n    /** An optional account address to connect to. Defaults to the first authorized account. */\n    accountAddress?: string;\n} & StandardConnectInput;\n\ntype ConnectWalletResult = StandardConnectOutput;\n\ntype UseConnectWalletMutationOptions = Omit<\n    UseMutationOptions<ConnectWalletResult, Error, ConnectWalletArgs, unknown>,\n    'mutationFn'\n>;\n\n/**\n * Mutation hook for establishing a connection to a specific wallet.\n */\nexport function useConnectWallet({\n    mutationKey,\n    ...mutationOptions\n}: UseConnectWalletMutationOptions = {}): UseMutationResult<\n    ConnectWalletResult,\n    Error,\n    ConnectWalletArgs,\n    unknown\n> {\n    const setWalletConnected = useWalletStore((state) => state.setWalletConnected);\n    const setConnectionStatus = useWalletStore((state) => state.setConnectionStatus);\n\n    return useMutation({\n        mutationKey: walletMutationKeys.connectWallet(mutationKey),\n        mutationFn: async ({ wallet, accountAddress, ...connectArgs }) => {\n            try {\n                setConnectionStatus('connecting');\n\n                const connectResult =\n                    await wallet.features['standard:connect'].connect(connectArgs);\n                const connectedIotaAccounts = connectResult.accounts.filter((account) =>\n                    account.chains.some(isSupportedChain),\n                );\n                const selectedAccount = getSelectedAccount(connectedIotaAccounts, accountAddress);\n\n                setWalletConnected(\n                    wallet,\n                    connectedIotaAccounts,\n                    selectedAccount,\n                    connectResult.supportedIntents,\n                );\n\n                return { accounts: connectedIotaAccounts };\n            } catch (error) {\n                setConnectionStatus('disconnected');\n                throw error;\n            }\n        },\n        ...mutationOptions,\n    });\n}\n\nfunction getSelectedAccount(connectedAccounts: readonly WalletAccount[], accountAddress?: string) {\n    if (connectedAccounts.length === 0) {\n        return null;\n    }\n\n    if (accountAddress) {\n        const selectedAccount = connectedAccounts.find(\n            (account) => account.address === accountAddress,\n        );\n        return selectedAccount ?? connectedAccounts[0];\n    }\n\n    return connectedAccounts[0];\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type {\n    MinimallyRequiredFeatures,\n    Wallet,\n    WalletWithFeatures,\n    WalletWithRequiredFeatures,\n} from '@iota/wallet-standard';\nimport { getWallets, isWalletWithRequiredFeatureSet } from '@iota/wallet-standard';\n\nexport function getRegisteredWallets<AdditionalFeatures extends Wallet['features']>(\n    preferredWallets: string[],\n    walletFilter?: (wallet: WalletWithRequiredFeatures) => boolean,\n) {\n    const walletsApi = getWallets();\n    const wallets = walletsApi.get();\n\n    const iotaWallets = wallets.filter(\n        (wallet): wallet is WalletWithFeatures<MinimallyRequiredFeatures & AdditionalFeatures> =>\n            isWalletWithRequiredFeatureSet(wallet) && (!walletFilter || walletFilter(wallet)),\n    );\n\n    return [\n        // Preferred wallets, in order:\n        ...(preferredWallets\n            .map((name) => iotaWallets.find((wallet) => wallet.name === name))\n            .filter(Boolean) as WalletWithFeatures<\n            MinimallyRequiredFeatures & AdditionalFeatures\n        >[]),\n\n        // Wallets in default order:\n        ...iotaWallets.filter((wallet) => !preferredWallets.includes(wallet.name)),\n    ];\n}\n\nexport function getWalletUniqueIdentifier(wallet?: Wallet) {\n    return wallet?.id ?? wallet?.name;\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ComponentProps } from 'react';\n\n// FIXME: Replace this with a 10x10 icon to match the CheckIcon, or alternatively make the CheckIcon bigger\n// Right now, the icons don't align on mobile :(\nexport function BackIcon(props: ComponentProps<'svg'>) {\n    return (\n        <svg width={24} height={24} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <path\n                d=\"M7.57 12.262c0 .341.13.629.403.895l5.175 5.059c.204.205.45.307.751.307.609 0 1.101-.485 1.101-1.087 0-.293-.123-.574-.349-.8L10.14 12.27l4.511-4.375A1.13 1.13 0 0 0 15 7.087C15 6.485 14.508 6 13.9 6c-.295 0-.54.103-.752.308l-5.175 5.058c-.28.28-.404.56-.404.896Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ComponentProps } from 'react';\n\nexport function CloseIcon(props: ComponentProps<'svg'>) {\n    return (\n        <svg width={10} height={10} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <path\n                d=\"M9.708.292a.999.999 0 0 0-1.413 0l-3.289 3.29L1.717.291A.999.999 0 0 0 .305 1.705l3.289 3.289-3.29 3.289a.999.999 0 1 0 1.413 1.412l3.29-3.289 3.288 3.29a.999.999 0 0 0 1.413-1.413l-3.29-3.29 3.29-3.288a.999.999 0 0 0 0-1.413Z\"\n                fill=\"currentColor\"\n            />\n        </svg>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Slot } from '@radix-ui/react-slot';\nimport clsx from 'clsx';\nimport { forwardRef } from 'react';\n\nimport { headingVariants } from './Heading.css.js';\nimport type { HeadingVariants } from './Heading.css.js';\n\ntype HeadingAsChildProps = {\n    asChild?: boolean;\n    as?: never;\n};\n\ntype HeadingAsProps = {\n    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n    asChild?: never;\n};\n\ntype HeadingProps = (HeadingAsChildProps | HeadingAsProps) &\n    React.HTMLAttributes<HTMLHeadingElement> &\n    HeadingVariants;\n\nconst Heading = forwardRef<HTMLHeadingElement, HeadingProps>(\n    (\n        {\n            children,\n            className,\n            asChild = false,\n            as: Tag = 'h1',\n            size,\n            weight,\n            truncate,\n            ...headingProps\n        },\n        forwardedRef,\n    ) => {\n        return (\n            <Slot\n                {...headingProps}\n                ref={forwardedRef}\n                className={clsx(headingVariants({ size, weight, truncate }), className)}\n            >\n                {asChild ? children : <Tag>{children}</Tag>}\n            </Slot>\n        );\n    },\n);\nHeading.displayName = 'Heading';\n\nexport { Heading };\n", "import 'src/components/ui/Heading.css.ts.vanilla.css?source=LkhlYWRpbmdfaGVhZGluZ1ZhcmlhbnRzX3NpemVfc21fXzEyYjVsOGkxIHsKICBmb250LXNpemU6IHZhcigtLWRhcHAta2l0LWZvbnRTaXplcy1zbWFsbCk7Cn0KLkhlYWRpbmdfaGVhZGluZ1ZhcmlhbnRzX3NpemVfbWRfXzEyYjVsOGkyIHsKICBmb250LXNpemU6IHZhcigtLWRhcHAta2l0LWZvbnRTaXplcy1tZWRpdW0pOwp9Ci5IZWFkaW5nX2hlYWRpbmdWYXJpYW50c19zaXplX2xnX18xMmI1bDhpMyB7CiAgZm9udC1zaXplOiB2YXIoLS1kYXBwLWtpdC1mb250U2l6ZXMtbGFyZ2UpOwp9Ci5IZWFkaW5nX2hlYWRpbmdWYXJpYW50c19zaXplX3hsX18xMmI1bDhpNCB7CiAgZm9udC1zaXplOiB2YXIoLS1kYXBwLWtpdC1mb250U2l6ZXMteGxhcmdlKTsKfQouSGVhZGluZ19oZWFkaW5nVmFyaWFudHNfd2VpZ2h0X25vcm1hbF9fMTJiNWw4aTUgewogIGZvbnQtd2VpZ2h0OiB2YXIoLS1kYXBwLWtpdC1mb250V2VpZ2h0cy1ub3JtYWwpOwp9Ci5IZWFkaW5nX2hlYWRpbmdWYXJpYW50c193ZWlnaHRfYm9sZF9fMTJiNWw4aTYgewogIGZvbnQtd2VpZ2h0OiB2YXIoLS1kYXBwLWtpdC1mb250V2VpZ2h0cy1ib2xkKTsKfQouSGVhZGluZ19oZWFkaW5nVmFyaWFudHNfdHJ1bmNhdGVfdHJ1ZV9fMTJiNWw4aTcgewogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQ==';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var headingVariants = _7a468({defaultClassName:'Heading__12b5l8i0',variantClassNames:{size:{sm:'Heading_headingVariants_size_sm__12b5l8i1',md:'Heading_headingVariants_size_md__12b5l8i2',lg:'Heading_headingVariants_size_lg__12b5l8i3',xl:'Heading_headingVariants_size_xl__12b5l8i4'},weight:{normal:'Heading_headingVariants_weight_normal__12b5l8i5',bold:'Heading_headingVariants_weight_bold__12b5l8i6'},truncate:{true:'Heading_headingVariants_truncate_true__12b5l8i7'}},defaultVariants:{size:'lg',weight:'bold'},compoundVariants:[]});", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Slot } from '@radix-ui/react-slot';\nimport clsx from 'clsx';\nimport type { ButtonHTMLAttributes } from 'react';\nimport { forwardRef } from 'react';\n\nimport * as styles from './IconButton.css.js';\n\ntype IconButtonProps = {\n    asChild?: boolean;\n    'aria-label': string;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n    ({ className, asChild = false, ...props }, forwardedRef) => {\n        const Comp = asChild ? Slot : 'button';\n        return <Comp {...props} className={clsx(styles.container, className)} ref={forwardedRef} />;\n    },\n);\nIconButton.displayName = 'Button';\n\nexport { IconButton };\n", "import 'src/components/ui/IconButton.css.ts.vanilla.css?source=Lkljb25CdXR0b25fY29udGFpbmVyX19hcDFxbGwwIHsKICBib3JkZXItcmFkaXVzOiA5OTk5cHg7CiAgcGFkZGluZzogOHB4OwogIGNvbG9yOiB2YXIoLS1kYXBwLWtpdC1jb2xvcnMtaWNvbkJ1dHRvbik7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFwcC1raXQtYmFja2dyb3VuZENvbG9ycy1pY29uQnV0dG9uKTsKfQ==';\nexport var container = 'IconButton_container__ap1qll0';", "import 'src/components/connect-modal/ConnectModal.css.ts.vanilla.css?source=#H4sIAAAAAAAAA61UUU/bMBB+76/wCxJIM0oZhRJetvVp0qZNQhqPyI0vzYFjR/alLZv63yfHaUqJaSpBH9L4HH939933+XxmtIaMfhop1INZglXi+eFhfF2qx1Ik7N+IsbnInhbW1FryzChjU7YU9pRzKaqKPyHx3Qczv+946dF+BbCz2xZCWlPxHBVBBEHVsWOVcUhodMpyXIP0IdQOKGWJf//LUUtYp+xm+7sdbUbney0RkoKuoXHTUCWkRL3gCnJK2bRa949lRhNo6g5evIeJ3xZLYVsmjJVguRUSa9c778PI10rYBTSfx9NkAXxu5Js8zQ2RKVM2vvLtMRZ63a4sLooXS4muUuI5ZbmCJuD/uUQLWYDNjKpL7Xcea0eYP/OWoJS5SmTA50ArgOYLL6JcmVXKCpQyxErUvICQdJIsiyYm1l1sOtnFViipSNl1ksQGsyoEfXdf74VSQN9qIqO7IX1+z5DuIDNabsfUSmRL0esqlgirmdEkUIPt8l82+TsytdGwh3WRVDt2F9ZTNO5jO1CQEcg/0RyT/RxhYK8hfIeBmz7AVbBApxgxd0bV1FRKptpVGRRzEZ1CpoyDtzJcD2WIqrA36GbCP9DR7JUXpzEKDml2n2/GFsK3eRmK6E3n3SY/3Mk+VzfxXoZddmy3RxRzj1R4sd21wuuKEzE9b0ZfSpAomMssgGZCS3bq/b317dW0Wp81J4+5UvudWLO6bTZawHGSnIRAI57JdhX02S3JCu1yY8s0vCpBcMonyckn5p+Nqze9ooavk4ih+zCH7oPIePsAw449qo4h03zQ7TiUOKbxA4NuNubCofO2bG24J+TkRcQVFvVTGzuqkgGBRwe0+Q9KhsMxGgkAAA==';\nexport var backButtonContainer = 'ConnectModal_backButtonContainer__17mljma6';\nexport var closeButtonContainer = 'ConnectModal_closeButtonContainer__17mljma7';\nexport var content = 'ConnectModal_content__17mljma2';\nexport var overlay = 'ConnectModal_overlay__17mljma0';\nexport var selectedViewContainer = 'ConnectModal_selectedViewContainer__17mljma5';\nexport var title = 'ConnectModal_title__17mljma1';\nexport var viewContainer = 'ConnectModal_viewContainer__17mljma4';\nexport var walletListContainer = 'ConnectModal_walletListContainer__17mljma9';\nexport var walletListContainerWithViewSelected = 'ConnectModal_walletListContainerWithViewSelected__17mljmaa';\nexport var walletListContent = 'ConnectModal_walletListContent__17mljma8';\nexport var whatIsAWalletButton = 'ConnectModal_whatIsAWalletButton__17mljma3';", "import 'src/components/connect-modal/views/ConnectionStatus.css.ts.vanilla.css?source=LkNvbm5lY3Rpb25TdGF0dXNfY29udGFpbmVyX19jNXExbGwwIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICB3aWR0aDogMTAwJTsKICBvdmVyZmxvdy15OiBhdXRvOwp9Ci5Db25uZWN0aW9uU3RhdHVzX3dhbGxldEljb25fX2M1cTFsbDEgewogIG9iamVjdC1maXQ6IGNvdmVyOwogIHdpZHRoOiA3MnB4OwogIGhlaWdodDogNzJweDsKICBib3JkZXItcmFkaXVzOiB2YXIoLS1kYXBwLWtpdC1yYWRpaS1sYXJnZSk7Cn0KLkNvbm5lY3Rpb25TdGF0dXNfdGl0bGVfX2M1cTFsbDIgewogIG1hcmdpbi10b3A6IDEycHg7Cn0KLkNvbm5lY3Rpb25TdGF0dXNfY29ubmVjdGlvblN0YXR1c19fYzVxMWxsMyB7CiAgbWFyZ2luLXRvcDogNHB4Owp9Ci5Db25uZWN0aW9uU3RhdHVzX3JldHJ5QnV0dG9uQ29udGFpbmVyX19jNXExbGw0IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAyMHB4OwogIHJpZ2h0OiAyMHB4Owp9';\nexport var connectionStatus = 'ConnectionStatus_connectionStatus__c5q1ll3';\nexport var container = 'ConnectionStatus_container__c5q1ll0';\nexport var retryButtonContainer = 'ConnectionStatus_retryButtonContainer__c5q1ll4';\nexport var title = 'ConnectionStatus_title__c5q1ll2';\nexport var walletIcon = 'ConnectionStatus_walletIcon__c5q1ll1';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletWithRequiredFeatures } from '@iota/wallet-standard';\n\nimport { Button } from '../../ui/Button.js';\nimport { Heading } from '../../ui/Heading.js';\nimport { Text } from '../../ui/Text.js';\nimport * as styles from './ConnectionStatus.css.js';\n\ntype ConnectionStatusProps = {\n    selectedWallet: WalletWithRequiredFeatures;\n    hadConnectionError: boolean;\n    onRetryConnection: (selectedWallet: WalletWithRequiredFeatures) => void;\n};\n\nexport function ConnectionStatus({\n    selectedWallet,\n    hadConnectionError,\n    onRetryConnection,\n}: ConnectionStatusProps) {\n    return (\n        <div className={styles.container}>\n            <img\n                className={styles.walletIcon}\n                src={selectedWallet.icon}\n                alt={`${selectedWallet.name} logo`}\n            />\n            <div className={styles.title}>\n                <Heading as=\"h2\" size=\"xl\">\n                    Opening {selectedWallet.name}\n                </Heading>\n            </div>\n            <div className={styles.connectionStatus}>\n                {hadConnectionError ? (\n                    <Text color=\"danger\">Connection failed</Text>\n                ) : (\n                    <Text color=\"muted\">Confirm connection in the wallet...</Text>\n                )}\n            </div>\n            {hadConnectionError ? (\n                <div className={styles.retryButtonContainer}>\n                    <Button\n                        type=\"button\"\n                        variant=\"primary\"\n                        onClick={() => onRetryConnection(selectedWallet)}\n                    >\n                        Retry Connection\n                    </Button>\n                </div>\n            ) : null}\n        </div>\n    );\n}\n", "import 'src/components/connect-modal/InfoSection.css.ts.vanilla.css?source=LkluZm9TZWN0aW9uX2NvbnRhaW5lcl9fMWQxbnJtdDAgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDRweDsKfQ==';\nexport var container = 'InfoSection_container__1d1nrmt0';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Heading } from '../ui/Heading.js';\nimport { Text } from '../ui/Text.js';\nimport * as styles from './InfoSection.css.js';\n\ntype InfoSectionProps = {\n    title: string;\n    children: string;\n};\n\nexport function InfoSection({ title, children }: InfoSectionProps) {\n    return (\n        <section className={styles.container}>\n            <Heading as=\"h3\" size=\"sm\" weight=\"normal\">\n                {title}\n            </Heading>\n            <Text weight=\"medium\" color=\"muted\">\n                {children}\n            </Text>\n        </section>\n    );\n}\n", "import 'src/components/connect-modal/views/GettingStarted.css.ts.vanilla.css?source=LkdldHRpbmdTdGFydGVkX2NvbnRhaW5lcl9fcXUzNnQ5MCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQouR2V0dGluZ1N0YXJ0ZWRfY29udGVudF9fcXUzNnQ5MSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtZ3JvdzogMTsKICBnYXA6IDIwcHg7CiAgcGFkZGluZzogNDBweDsKICBwYWRkaW5nLWJvdHRvbTogNjBweDsKICBvdmVyZmxvdzogYXV0bzsKfQouR2V0dGluZ1N0YXJ0ZWRfaW5zdGFsbEJ1dHRvbkNvbnRhaW5lcl9fcXUzNnQ5MiB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMjBweDsKICByaWdodDogMjBweDsKfQ==';\nexport var container = 'GettingStarted_container__qu36t90';\nexport var content = 'GettingStarted_content__qu36t91';\nexport var installButtonContainer = 'GettingStarted_installButtonContainer__qu36t92';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Button } from '../../ui/Button.js';\nimport { Heading } from '../../ui/Heading.js';\nimport { InfoSection } from '../InfoSection.js';\nimport * as styles from './GettingStarted.css.js';\n\nexport function GettingStarted() {\n    return (\n        <div className={styles.container}>\n            <Heading as=\"h2\">Get Started with IOTA</Heading>\n            <div className={styles.content}>\n                <InfoSection title=\"Install the IOTA Wallet Extension\">\n                    We recommend pinning IOTA Wallet to your taskbar for quicker access.\n                </InfoSection>\n                <InfoSection title=\"Create or Import a Wallet\">\n                    Be sure to back up your wallet using a secure method. Never share your secret\n                    phrase with anyone.\n                </InfoSection>\n                <InfoSection title=\"Refresh Your Browser\">\n                    Once you set up your wallet, refresh this window browser to load up the\n                    extension.\n                </InfoSection>\n                <div className={styles.installButtonContainer}>\n                    <Button variant=\"primary\" asChild>\n                        <a\n                            href=\"https://chrome.google.com/webstore/detail/iota-wallet/iidjkmdceolghepehaaddojmnjnkkija\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            Install Wallet Extension\n                        </a>\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n", "import 'src/components/connect-modal/views/WhatIsAWallet.css.ts.vanilla.css?source=LldoYXRJc0FXYWxsZXRfY29udGFpbmVyX18xa2RjaW1xMCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLldoYXRJc0FXYWxsZXRfY29udGVudF9fMWtkY2ltcTEgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBmbGV4LWdyb3c6IDE7CiAgZ2FwOiAyMHB4OwogIHBhZGRpbmc6IDQwcHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQ==';\nexport var container = 'WhatIsAWallet_container__1kdcimq0';\nexport var content = 'WhatIsAWallet_content__1kdcimq1';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Heading } from '../../ui/Heading.js';\nimport { InfoSection } from '../InfoSection.js';\nimport * as styles from './WhatIsAWallet.css.js';\n\nexport function WhatIsAWallet() {\n    return (\n        <div className={styles.container}>\n            <Heading as=\"h2\">What is a Wallet</Heading>\n            <div className={styles.content}>\n                <InfoSection title=\"Easy Login\">\n                    No need to create new accounts and passwords for every website. Just connect\n                    your wallet and get going.\n                </InfoSection>\n                <InfoSection title=\"Store your Digital Assets\">\n                    Send, receive, store, and display your digital assets like NFTs & coins.\n                </InfoSection>\n            </div>\n        </div>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useWalletStore } from './useWalletStore.js';\n\n/**\n * Retrieves a list of registered wallets available to the dApp sorted by preference.\n */\nexport function useWallets() {\n    return useWalletStore((state) => state.wallets);\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ComponentProps } from 'react';\n\nexport function IotaIcon(props: ComponentProps<'svg'>) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"28px\"\n            height=\"28px\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            {...props}\n        >\n            <path\n                fill=\"#171d26\"\n                d=\"M18.27 2.259c0 .695-.568 1.259-1.268 1.259s-1.267-.564-1.267-1.259S16.302 1 17.002 1s1.268.564 1.268 1.259m1.425 17.785c0 .695-.568 1.259-1.268 1.259s-1.267-.564-1.267-1.26c0-.695.567-1.258 1.267-1.258s1.268.563 1.268 1.259m-2.33-13.379a1.06 1.06 0 0 0 1.063-1.056 1.06 1.06 0 0 0-1.063-1.057A1.06 1.06 0 0 0 16.3 5.61a1.06 1.06 0 0 0 1.064 1.056Zm3.891-.651a1.06 1.06 0 0 1-1.063 1.056 1.06 1.06 0 0 1-1.064-1.056 1.06 1.06 0 0 1 1.064-1.057 1.06 1.06 0 0 1 1.063 1.057m-4.253 3.329c.5 0 .905-.403.905-.9 0-.496-.405-.9-.905-.9s-.906.404-.906.9c0 .497.406.9.906.9m3.734-.52c0 .497-.405.9-.905.9a.903.903 0 0 1-.906-.9c0-.496.405-.9.906-.9.5 0 .905.404.905.9m1.357 1.777c.5 0 .906-.402.906-.899s-.405-.9-.906-.9c-.5 0-.905.403-.905.9s.405.9.905.9Zm-2.309.495a.79.79 0 0 1-.792.787.79.79 0 0 1-.791-.787c0-.434.354-.786.791-.786s.792.352.792.786m-3.62.404a.79.79 0 0 0 .792-.787.79.79 0 0 0-.792-.786.79.79 0 0 0-.791.786c0 .435.354.787.791.787m5.907.471a.79.79 0 0 1-.791.787.79.79 0 0 1-.792-.786.79.79 0 0 1 .792-.787.79.79 0 0 1 .791.787Zm-4.21 1.554c.375 0 .68-.302.68-.675a.677.677 0 0 0-.68-.675.68.68 0 0 0-.68.675c0 .373.304.675.68.675m2.968.178a.68.68 0 0 1-.68.676.677.677 0 0 1-.68-.676c0-.373.304-.675.68-.675.375 0 .68.302.68.675m-5.774-.582c.375 0 .68-.302.68-.675a.68.68 0 0 0-.68-.675.68.68 0 0 0-.68.675c0 .373.304.675.68.675m2.127.943c0 .31-.254.561-.566.561a.564.564 0 0 1-.566-.562c0-.31.253-.561.566-.561s.566.251.566.562m.407 2.114a.496.496 0 0 0 .498-.494.496.496 0 0 0-.498-.495.496.496 0 0 0-.498.495c0 .273.223.494.498.494m-.791-.09a.407.407 0 0 1-.408.405.407.407 0 0 1-.408-.405c0-.223.182-.405.408-.405s.408.181.408.405m-1.472-.765a.496.496 0 0 0 .498-.494.496.496 0 0 0-.498-.495.496.496 0 0 0-.498.495c0 .273.223.494.498.494m-.973-1.64c0 .31-.254.562-.566.562a.564.564 0 0 1-.566-.562c0-.31.253-.562.566-.562s.566.251.566.562m-.588-3.666a.564.564 0 0 0 .566-.562.564.564 0 0 0-.566-.562.564.564 0 0 0-.565.562c0 .31.253.562.565.562m.745-2.473a.496.496 0 0 1-.497.494.496.496 0 0 1-.498-.494c0-.273.223-.494.498-.494s.498.22.498.494Zm.047-1.123a.406.406 0 0 0 .407-.406.406.406 0 0 0-.407-.405.407.407 0 0 0-.408.405c0 .224.182.406.408.406m-.452-1.26a.496.496 0 0 1-.498.494.496.496 0 0 1-.498-.494c0-.273.223-.494.498-.494s.498.22.498.494m4.776 10.32a.564.564 0 0 0 .566-.561.564.564 0 0 0-.566-.562.564.564 0 0 0-.566.562c0 .31.253.562.566.562ZM12.883 4.439c0 .31-.254.562-.566.562a.564.564 0 0 1-.566-.562c0-.31.254-.562.566-.562s.566.251.566.562m-.18 2.945a.564.564 0 0 0 .566-.562.564.564 0 0 0-.566-.561.564.564 0 0 0-.566.561c0 .31.253.562.566.562m.045 1.597a.677.677 0 0 1-.68.676.68.68 0 0 1-.679-.676c0-.373.304-.675.68-.675.375 0 .68.302.68.675Zm-2.74.676a.79.79 0 0 0 .791-.786.79.79 0 0 0-.791-.787.79.79 0 0 0-.792.787c0 .434.354.786.792.786m-1.494-.36c0 .497-.405.9-.905.9a.903.903 0 0 1-.906-.9c0-.497.406-.9.906-.9s.905.403.905.9m-3.529 2.18a1.06 1.06 0 0 0 1.063-1.056 1.06 1.06 0 0 0-1.063-1.056A1.06 1.06 0 0 0 3.92 10.42a1.06 1.06 0 0 0 1.064 1.056Zm-1.45.9c0 .696-.568 1.26-1.268 1.26S1 13.073 1 12.377c0-.695.567-1.259 1.267-1.259s1.268.564 1.268 1.26Zm.386-3.531A1.06 1.06 0 0 0 4.985 7.79 1.06 1.06 0 0 0 3.92 6.733 1.06 1.06 0 0 0 2.858 7.79 1.06 1.06 0 0 0 3.92 8.846Zm3.53-2.181c0 .497-.405.9-.906.9a.903.903 0 0 1-.905-.9c0-.496.405-.9.905-.9s.906.404.906.9M6.162 5.182c.5 0 .905-.403.905-.9 0-.496-.405-.9-.905-.9s-.906.404-.906.9c0 .497.406.9.906.9m3.19-1.326a.79.79 0 0 1-.791.787.79.79 0 0 1-.792-.787c0-.434.354-.786.792-.786.437 0 .791.352.791.786m1.268.788c.375 0 .68-.303.68-.675a.677.677 0 0 0-.68-.676.68.68 0 0 0-.68.675c0 .373.304.676.68.676m1.063 1.708a.68.68 0 0 1-.68.675.677.677 0 0 1-.68-.675c0-.373.305-.675.68-.675s.68.302.68.675m-2.739.695a.79.79 0 0 0 .792-.786.79.79 0 0 0-.792-.786.79.79 0 0 0-.791.786c0 .434.354.786.791.786m-1.832 5.578a.407.407 0 0 1-.408.405.407.407 0 0 1-.408-.405c0-.223.182-.405.408-.405s.408.181.408.405m1.221.201a.496.496 0 0 0 .497-.494.496.496 0 0 0-.497-.495.496.496 0 0 0-.498.495c0 .273.223.494.498.494m2.354-1.236c0 .31-.253.562-.565.562a.564.564 0 0 1-.566-.562c0-.31.253-.562.566-.562s.565.252.565.562m-.135 2.361c.375 0 .68-.302.68-.675a.677.677 0 0 0-.68-.675.677.677 0 0 0-.68.675c0 .373.304.675.68.675m-1.608-.135c0 .31-.253.562-.566.562a.564.564 0 0 1-.565-.562c0-.31.253-.562.565-.562.313 0 .566.252.566.562m-2.488.538a.496.496 0 0 0 .498-.494.496.496 0 0 0-.498-.495.496.496 0 0 0-.498.495c0 .273.223.494.498.494m.588.991c0 .31-.254.562-.566.562a.564.564 0 0 1-.566-.562c0-.31.253-.562.566-.562s.566.252.566.562m1.742.855c.376 0 .68-.303.68-.675a.677.677 0 0 0-.68-.676.677.677 0 0 0-.68.675c0 .373.305.676.68.676m3.484-1.08a.79.79 0 0 1-.79.786.79.79 0 0 1-.792-.786c0-.435.354-.787.791-.787s.792.352.792.787Zm.794 2.743c.5 0 .906-.402.906-.9 0-.496-.406-.899-.906-.899s-.905.403-.905.9.405.9.905.9Zm-2.536-.518a.79.79 0 0 1-.792.786.79.79 0 0 1-.792-.787.79.79 0 0 1 .792-.786.79.79 0 0 1 .792.787m-2.669 2.316a.79.79 0 0 0 .791-.786.79.79 0 0 0-.792-.786.79.79 0 0 0-.791.786c0 .434.354.786.792.786m2.466 1.079c0 .497-.405.9-.905.9a.903.903 0 0 1-.906-.9c0-.496.405-.9.906-.9.5 0 .905.404.905.9M13.584 22a1.06 1.06 0 0 0 1.064-1.056 1.06 1.06 0 0 0-1.064-1.057 1.06 1.06 0 0 0-1.063 1.057A1.06 1.06 0 0 0 13.584 22m-1.379-2.788c0 .497-.405.9-.905.9a.903.903 0 0 1-.906-.9c0-.497.405-.9.905-.9s.906.403.906.9m3.123.54a1.06 1.06 0 0 0 1.063-1.057 1.06 1.06 0 0 0-1.063-1.056 1.06 1.06 0 0 0-1.064 1.056 1.06 1.06 0 0 0 1.064 1.057m-7.741-2.699a.677.677 0 0 1-.68.676.677.677 0 0 1-.68-.676c0-.373.305-.675.68-.675s.68.302.68.675\"\n            />\n        </svg>\n    );\n}\n", "import 'src/components/connect-modal/wallet-list/WalletList.css.ts.vanilla.css?source=LldhbGxldExpc3RfY29udGFpbmVyX18xdGtkZWd3MCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGdhcDogNHB4OwogIG92ZXJmbG93LXk6IGF1dG87Cn0KLldhbGxldExpc3RfaWNvbl9fMXRrZGVndzEgewogIGNvbG9yOiB2YXIoLS1kYXBwLWtpdC1jb2xvcnMtYm9keSk7Cn0=';\nexport var container = 'WalletList_container__1tkdegw0';\nexport var icon = 'WalletList_icon__1tkdegw1';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport { clsx } from 'clsx';\nimport type { ReactNode } from 'react';\n\nimport { Heading } from '../../ui/Heading.js';\nimport * as styles from './WalletListItem.css.js';\n\ntype WalletListItemProps = {\n    name: string;\n    icon: ReactNode;\n    isSelected?: boolean;\n    onClick: () => void;\n};\n\nexport function WalletListItem({ name, icon, onClick, isSelected = false }: WalletListItemProps) {\n    return (\n        <li className={styles.container}>\n            <button\n                className={clsx(styles.walletItem, { [styles.selectedWalletItem]: isSelected })}\n                type=\"button\"\n                onClick={onClick}\n            >\n                {typeof icon === 'string' ? (\n                    <img className={styles.walletIcon} src={icon} alt={`${name} logo`} />\n                ) : (\n                    icon\n                )}\n                <Heading size=\"md\" truncate asChild>\n                    <div>{name}</div>\n                </Heading>\n            </button>\n        </li>\n    );\n}\n", "import 'src/components/connect-modal/wallet-list/WalletListItem.css.ts.vanilla.css?source=LldhbGxldExpc3RJdGVtX2NvbnRhaW5lcl9fMXZydmV6azAgewogIGRpc3BsYXk6IGZsZXg7Cn0KLldhbGxldExpc3RJdGVtX3dhbGxldEl0ZW1fXzF2cnZlemsxIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZmxleC1ncm93OiAxOwogIHBhZGRpbmc6IDhweDsKICBnYXA6IDhweDsKICBib3JkZXItcmFkaXVzOiB2YXIoLS1kYXBwLWtpdC1yYWRpaS1sYXJnZSk7Cn0KLldhbGxldExpc3RJdGVtX3dhbGxldEl0ZW1fXzF2cnZlemsxOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYXBwLWtpdC1iYWNrZ3JvdW5kQ29sb3JzLXdhbGxldEl0ZW1Ib3Zlcik7Cn0KLldhbGxldExpc3RJdGVtX3NlbGVjdGVkV2FsbGV0SXRlbV9fMXZydmV6azIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcHAta2l0LWJhY2tncm91bmRDb2xvcnMtd2FsbGV0SXRlbVNlbGVjdGVkKTsKICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMDUpOwp9Ci5XYWxsZXRMaXN0SXRlbV93YWxsZXRJY29uX18xdnJ2ZXprMyB7CiAgd2lkdGg6IDI4cHg7CiAgaGVpZ2h0OiAyOHB4OwogIGZsZXgtc2hyaW5rOiAwOwogIG9iamVjdC1maXQ6IGNvdmVyOwogIGJvcmRlci1yYWRpdXM6IHZhcigtLWRhcHAta2l0LXJhZGlpLXNtYWxsKTsKfQ==';\nexport var container = 'WalletListItem_container__1vrvezk0';\nexport var selectedWalletItem = 'WalletListItem_selectedWalletItem__1vrvezk2';\nexport var walletIcon = 'WalletListItem_walletIcon__1vrvezk3';\nexport var walletItem = 'WalletListItem_walletItem__1vrvezk1';", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletWithRequiredFeatures } from '@iota/wallet-standard';\n\nimport { useWallets } from '../../../hooks/wallet/useWallets.js';\nimport { getWalletUniqueIdentifier } from '../../../utils/walletUtils.js';\nimport { IotaIcon } from '../../icons/IotaIcon.js';\nimport * as styles from './WalletList.css.js';\nimport { WalletListItem } from './WalletListItem.js';\n\ntype WalletListProps = {\n    selectedWalletName?: string;\n    onPlaceholderClick: () => void;\n    onSelect: (wallet: WalletWithRequiredFeatures) => void;\n};\n\nexport function WalletList({ selectedWalletName, onPlaceholderClick, onSelect }: WalletListProps) {\n    const wallets = useWallets();\n    return (\n        <ul className={styles.container}>\n            {wallets.length > 0 ? (\n                wallets.map((wallet) => (\n                    <WalletListItem\n                        key={getWalletUniqueIdentifier(wallet)}\n                        name={wallet.name}\n                        icon={wallet.icon}\n                        isSelected={getWalletUniqueIdentifier(wallet) === selectedWalletName}\n                        onClick={() => onSelect(wallet)}\n                    />\n                ))\n            ) : (\n                <WalletListItem\n                    name=\"IOTA Wallet\"\n                    icon={<IotaIcon className={styles.icon} />}\n                    onClick={onPlaceholderClick}\n                    isSelected\n                />\n            )}\n        </ul>\n    );\n}\n", "// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { ReactNode } from 'react';\n\nimport { useCurrentAccount } from '../hooks/wallet/useCurrentAccount.js';\nimport { AccountDropdownMenu } from './AccountDropdownMenu.js';\nimport { ConnectModal } from './connect-modal/ConnectModal.js';\nimport { StyleMarker } from './styling/StyleMarker.js';\nimport { Button } from './ui/Button.js';\n\ntype ConnectButtonProps = {\n    connectText?: ReactNode;\n    size?: React.ComponentProps<typeof Button>['size'];\n} & React.ComponentProps<typeof Button>;\n\nexport function ConnectButton({\n    connectText = 'Connect Wallet',\n    size,\n    ...buttonProps\n}: ConnectButtonProps) {\n    const currentAccount = useCurrentAccount();\n    return currentAccount ? (\n        <AccountDropdownMenu currentAccount={currentAccount} size={size} />\n    ) : (\n        <ConnectModal\n            trigger={\n                <StyleMarker>\n                    <Button {...buttonProps} size={size}>\n                        {connectText}\n                    </Button>\n                </StyleMarker>\n            }\n        />\n    );\n}\n"],
  "mappings": "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",
  "names": ["clsx", "connectionStatus", "useMutation", "useMutation", "jsx", "jsx", "Slot", "forwardRef", "jsx", "forwardRef", "Slot", "Slot", "clsx", "forwardRef", "_7a468", "jsx", "forwardRef", "Slot", "clsx", "jsx", "clsx", "clsx", "useMutation", "useMutation", "jsx", "jsx", "Slot", "clsx", "forwardRef", "_7a468", "jsx", "forwardRef", "Slot", "clsx", "Slot", "clsx", "forwardRef", "jsx", "forwardRef", "Slot", "clsx", "container", "title", "jsx", "jsxs", "container", "title", "container", "jsx", "jsxs", "title", "container", "container", "content", "jsx", "jsxs", "container", "content", "container", "content", "jsx", "jsxs", "container", "content", "jsx", "container", "clsx", "container", "walletIcon", "jsx", "jsxs", "icon", "container", "clsx", "walletIcon", "jsx", "container", "jsx", "jsxs", "open", "clsx", "jsx"]
}
