{
  "version": 3,
  "sources": ["../../../src/features/iotaSignAndExecuteTransaction.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { IotaTransactionBlockResponseOptions } from '@iota/iota-sdk/client';\nimport type { SignedTransaction, IotaSignTransactionInput } from './iotaSignTransaction.js';\n\n/** The latest API version of the signAndExecuteTransactionBlock API. */\nexport type IotaSignAndExecuteTransactionVersion = '2.0.0';\n\n/**\n * A Wallet Standard feature for signing a transaction, and submitting it to the\n * network. The wallet is expected to submit the transaction to the network via RPC,\n * and return the transaction response.\n */\nexport type IotaSignAndExecuteTransactionFeature = {\n    /** Namespace for the feature. */\n    'iota:signAndExecuteTransaction': {\n        /** Version of the feature API. */\n        version: IotaSignAndExecuteTransactionVersion;\n        signAndExecuteTransaction: IotaSignAndExecuteTransactionMethod;\n    };\n};\n\nexport type IotaSignAndExecuteTransactionMethod = (\n    input: IotaSignAndExecuteTransactionInput,\n) => Promise<IotaSignAndExecuteTransactionOutput>;\n\n/** Input for signing and sending transactions. */\nexport interface IotaSignAndExecuteTransactionInput extends IotaSignTransactionInput {\n    /** specify which fields to return (e.g., transaction, effects, events, etc). By default, only the transaction digest will be returned. */\n    options?: IotaTransactionBlockResponseOptions;\n}\n\n/** Output of signing and sending transactions. */\nexport interface IotaSignAndExecuteTransactionOutput extends SignedTransaction {\n    digest: string;\n    /** Transaction effects as base64 encoded bcs. */\n    effects: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
