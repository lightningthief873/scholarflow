{
  "version": 3,
  "sources": ["../../../src/features/iotaSignPersonalMessage.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { WalletAccount } from '@wallet-standard/core';\n\n/** The latest API version of the signPersonalMessage API. */\nexport type IotaSignPersonalMessageVersion = '1.0.0';\n\n/**\n * A Wallet Standard feature for signing a personal message, and returning the\n * message bytes that were signed, and message signature.\n */\nexport type IotaSignPersonalMessageFeature = {\n    /** Namespace for the feature. */\n    'iota:signPersonalMessage': {\n        /** Version of the feature API. */\n        version: IotaSignPersonalMessageVersion;\n        signPersonalMessage: IotaSignPersonalMessageMethod;\n    };\n};\n\nexport type IotaSignPersonalMessageMethod = (\n    input: IotaSignPersonalMessageInput,\n) => Promise<IotaSignPersonalMessageOutput>;\n\n/** Input for signing personal messages. */\nexport interface IotaSignPersonalMessageInput {\n    message: Uint8Array;\n    account: WalletAccount;\n}\n\n/** Output of signing personal messages. */\nexport interface IotaSignPersonalMessageOutput extends SignedPersonalMessage {}\n\nexport interface SignedPersonalMessage {\n    /** Base64 encoded message bytes */\n    bytes: string;\n    /** Base64 encoded signature */\n    signature: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
