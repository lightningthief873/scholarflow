"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var wallet_exports = {};
__export(wallet_exports, {
  signAndExecuteTransaction: () => signAndExecuteTransaction,
  signTransaction: () => signTransaction
});
module.exports = __toCommonJS(wallet_exports);
async function signAndExecuteTransaction(wallet, input) {
  if (!wallet.features["iota:signAndExecuteTransaction"]) {
    throw new Error(
      `Provided wallet (${wallet.name}) does not support the signAndExecuteTransaction feature.`
    );
  }
  return wallet.features["iota:signAndExecuteTransaction"].signAndExecuteTransaction(input);
}
async function signTransaction(wallet, input) {
  if (!wallet.features["iota:signTransaction"]) {
    throw new Error(
      `Provided wallet (${wallet.name}) does not support the signTransaction feature.`
    );
  }
  return wallet.features["iota:signTransaction"].signTransaction(input);
}
//# sourceMappingURL=wallet.js.map
