{
  "version": 3,
  "sources": ["../../../src/features/iotaSignTransaction.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// Modifications Copyright (c) 2024 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { IdentifierString, WalletAccount } from '@wallet-standard/core';\n\n/** The latest API version of the signTransaction API. */\nexport type IotaSignTransactionVersion = '2.0.0';\n\n/**\n * A Wallet Standard feature for signing a transaction, and returning the\n * serialized transaction and transaction signature.\n */\nexport type IotaSignTransactionFeature = {\n    /** Namespace for the feature. */\n    'iota:signTransaction': {\n        /** Version of the feature API. */\n        version: IotaSignTransactionVersion;\n        signTransaction: IotaSignTransactionMethod;\n    };\n};\n\nexport type IotaSignTransactionMethod = (\n    input: IotaSignTransactionInput,\n) => Promise<SignedTransaction>;\n\n/** Input for signing transactions. */\nexport interface IotaSignTransactionInput {\n    transaction: { toJSON: () => Promise<string> };\n    account: WalletAccount;\n    chain: IdentifierString;\n    signal?: AbortSignal;\n}\n\n/** Output of signing transactions. */\n\nexport interface SignedTransaction {\n    /** Transaction as base64 encoded bcs. */\n    bytes: string;\n    /** Base64 encoded signature */\n    signature: string;\n}\n\nexport interface IotaSignTransactionOutput extends SignedTransaction {}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
